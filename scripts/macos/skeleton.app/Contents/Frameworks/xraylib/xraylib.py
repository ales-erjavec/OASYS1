# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.11
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


"""xraylib: a library for X-ray--matter interactions"""


from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_xraylib')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_xraylib')
    _xraylib = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_xraylib', [dirname(__file__)])
        except ImportError:
            import _xraylib
            return _xraylib
        if fp is not None:
            try:
                _mod = imp.load_module('_xraylib', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _xraylib = swig_import_helper()
    del swig_import_helper
else:
    import _xraylib
del _swig_python_version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

XRAYLIB_MAJOR = _xraylib.XRAYLIB_MAJOR
XRAYLIB_MINOR = _xraylib.XRAYLIB_MINOR
XRAYLIB_MICRO = _xraylib.XRAYLIB_MICRO
PI = _xraylib.PI
TWOPI = _xraylib.TWOPI
RADEG = _xraylib.RADEG
DEGRAD = _xraylib.DEGRAD
AVOGNUM = _xraylib.AVOGNUM
KEV2ANGST = _xraylib.KEV2ANGST
MEC2 = _xraylib.MEC2
RE2 = _xraylib.RE2
R_E = _xraylib.R_E
K_SHELL = _xraylib.K_SHELL
L1_SHELL = _xraylib.L1_SHELL
L2_SHELL = _xraylib.L2_SHELL
L3_SHELL = _xraylib.L3_SHELL
M1_SHELL = _xraylib.M1_SHELL
M2_SHELL = _xraylib.M2_SHELL
M3_SHELL = _xraylib.M3_SHELL
M4_SHELL = _xraylib.M4_SHELL
M5_SHELL = _xraylib.M5_SHELL
N1_SHELL = _xraylib.N1_SHELL
N2_SHELL = _xraylib.N2_SHELL
N3_SHELL = _xraylib.N3_SHELL
N4_SHELL = _xraylib.N4_SHELL
N5_SHELL = _xraylib.N5_SHELL
N6_SHELL = _xraylib.N6_SHELL
N7_SHELL = _xraylib.N7_SHELL
O1_SHELL = _xraylib.O1_SHELL
O2_SHELL = _xraylib.O2_SHELL
O3_SHELL = _xraylib.O3_SHELL
O4_SHELL = _xraylib.O4_SHELL
O5_SHELL = _xraylib.O5_SHELL
O6_SHELL = _xraylib.O6_SHELL
O7_SHELL = _xraylib.O7_SHELL
P1_SHELL = _xraylib.P1_SHELL
P2_SHELL = _xraylib.P2_SHELL
P3_SHELL = _xraylib.P3_SHELL
P4_SHELL = _xraylib.P4_SHELL
P5_SHELL = _xraylib.P5_SHELL
Q1_SHELL = _xraylib.Q1_SHELL
Q2_SHELL = _xraylib.Q2_SHELL
Q3_SHELL = _xraylib.Q3_SHELL
KL1_LINE = _xraylib.KL1_LINE
KL2_LINE = _xraylib.KL2_LINE
KL3_LINE = _xraylib.KL3_LINE
KM1_LINE = _xraylib.KM1_LINE
KM2_LINE = _xraylib.KM2_LINE
KM3_LINE = _xraylib.KM3_LINE
KM4_LINE = _xraylib.KM4_LINE
KM5_LINE = _xraylib.KM5_LINE
KN1_LINE = _xraylib.KN1_LINE
KN2_LINE = _xraylib.KN2_LINE
KN3_LINE = _xraylib.KN3_LINE
KN4_LINE = _xraylib.KN4_LINE
KN5_LINE = _xraylib.KN5_LINE
KN6_LINE = _xraylib.KN6_LINE
KN7_LINE = _xraylib.KN7_LINE
KO_LINE = _xraylib.KO_LINE
KO1_LINE = _xraylib.KO1_LINE
KO2_LINE = _xraylib.KO2_LINE
KO3_LINE = _xraylib.KO3_LINE
KO4_LINE = _xraylib.KO4_LINE
KO5_LINE = _xraylib.KO5_LINE
KO6_LINE = _xraylib.KO6_LINE
KO7_LINE = _xraylib.KO7_LINE
KP_LINE = _xraylib.KP_LINE
KP1_LINE = _xraylib.KP1_LINE
KP2_LINE = _xraylib.KP2_LINE
KP3_LINE = _xraylib.KP3_LINE
KP4_LINE = _xraylib.KP4_LINE
KP5_LINE = _xraylib.KP5_LINE
L1L2_LINE = _xraylib.L1L2_LINE
L1L3_LINE = _xraylib.L1L3_LINE
L1M1_LINE = _xraylib.L1M1_LINE
L1M2_LINE = _xraylib.L1M2_LINE
L1M3_LINE = _xraylib.L1M3_LINE
L1M4_LINE = _xraylib.L1M4_LINE
L1M5_LINE = _xraylib.L1M5_LINE
L1N1_LINE = _xraylib.L1N1_LINE
L1N2_LINE = _xraylib.L1N2_LINE
L1N3_LINE = _xraylib.L1N3_LINE
L1N4_LINE = _xraylib.L1N4_LINE
L1N5_LINE = _xraylib.L1N5_LINE
L1N6_LINE = _xraylib.L1N6_LINE
L1N67_LINE = _xraylib.L1N67_LINE
L1N7_LINE = _xraylib.L1N7_LINE
L1O1_LINE = _xraylib.L1O1_LINE
L1O2_LINE = _xraylib.L1O2_LINE
L1O3_LINE = _xraylib.L1O3_LINE
L1O4_LINE = _xraylib.L1O4_LINE
L1O45_LINE = _xraylib.L1O45_LINE
L1O5_LINE = _xraylib.L1O5_LINE
L1O6_LINE = _xraylib.L1O6_LINE
L1O7_LINE = _xraylib.L1O7_LINE
L1P1_LINE = _xraylib.L1P1_LINE
L1P2_LINE = _xraylib.L1P2_LINE
L1P23_LINE = _xraylib.L1P23_LINE
L1P3_LINE = _xraylib.L1P3_LINE
L1P4_LINE = _xraylib.L1P4_LINE
L1P5_LINE = _xraylib.L1P5_LINE
L2L3_LINE = _xraylib.L2L3_LINE
L2M1_LINE = _xraylib.L2M1_LINE
L2M2_LINE = _xraylib.L2M2_LINE
L2M3_LINE = _xraylib.L2M3_LINE
L2M4_LINE = _xraylib.L2M4_LINE
L2M5_LINE = _xraylib.L2M5_LINE
L2N1_LINE = _xraylib.L2N1_LINE
L2N2_LINE = _xraylib.L2N2_LINE
L2N3_LINE = _xraylib.L2N3_LINE
L2N4_LINE = _xraylib.L2N4_LINE
L2N5_LINE = _xraylib.L2N5_LINE
L2N6_LINE = _xraylib.L2N6_LINE
L2N7_LINE = _xraylib.L2N7_LINE
L2O1_LINE = _xraylib.L2O1_LINE
L2O2_LINE = _xraylib.L2O2_LINE
L2O3_LINE = _xraylib.L2O3_LINE
L2O4_LINE = _xraylib.L2O4_LINE
L2O5_LINE = _xraylib.L2O5_LINE
L2O6_LINE = _xraylib.L2O6_LINE
L2O7_LINE = _xraylib.L2O7_LINE
L2P1_LINE = _xraylib.L2P1_LINE
L2P2_LINE = _xraylib.L2P2_LINE
L2P23_LINE = _xraylib.L2P23_LINE
L2P3_LINE = _xraylib.L2P3_LINE
L2P4_LINE = _xraylib.L2P4_LINE
L2P5_LINE = _xraylib.L2P5_LINE
L2Q1_LINE = _xraylib.L2Q1_LINE
L3M1_LINE = _xraylib.L3M1_LINE
L3M2_LINE = _xraylib.L3M2_LINE
L3M3_LINE = _xraylib.L3M3_LINE
L3M4_LINE = _xraylib.L3M4_LINE
L3M5_LINE = _xraylib.L3M5_LINE
L3N1_LINE = _xraylib.L3N1_LINE
L3N2_LINE = _xraylib.L3N2_LINE
L3N3_LINE = _xraylib.L3N3_LINE
L3N4_LINE = _xraylib.L3N4_LINE
L3N5_LINE = _xraylib.L3N5_LINE
L3N6_LINE = _xraylib.L3N6_LINE
L3N7_LINE = _xraylib.L3N7_LINE
L3O1_LINE = _xraylib.L3O1_LINE
L3O2_LINE = _xraylib.L3O2_LINE
L3O3_LINE = _xraylib.L3O3_LINE
L3O4_LINE = _xraylib.L3O4_LINE
L3O45_LINE = _xraylib.L3O45_LINE
L3O5_LINE = _xraylib.L3O5_LINE
L3O6_LINE = _xraylib.L3O6_LINE
L3O7_LINE = _xraylib.L3O7_LINE
L3P1_LINE = _xraylib.L3P1_LINE
L3P2_LINE = _xraylib.L3P2_LINE
L3P23_LINE = _xraylib.L3P23_LINE
L3P3_LINE = _xraylib.L3P3_LINE
L3P4_LINE = _xraylib.L3P4_LINE
L3P45_LINE = _xraylib.L3P45_LINE
L3P5_LINE = _xraylib.L3P5_LINE
L3Q1_LINE = _xraylib.L3Q1_LINE
M1M2_LINE = _xraylib.M1M2_LINE
M1M3_LINE = _xraylib.M1M3_LINE
M1M4_LINE = _xraylib.M1M4_LINE
M1M5_LINE = _xraylib.M1M5_LINE
M1N1_LINE = _xraylib.M1N1_LINE
M1N2_LINE = _xraylib.M1N2_LINE
M1N3_LINE = _xraylib.M1N3_LINE
M1N4_LINE = _xraylib.M1N4_LINE
M1N5_LINE = _xraylib.M1N5_LINE
M1N6_LINE = _xraylib.M1N6_LINE
M1N7_LINE = _xraylib.M1N7_LINE
M1O1_LINE = _xraylib.M1O1_LINE
M1O2_LINE = _xraylib.M1O2_LINE
M1O3_LINE = _xraylib.M1O3_LINE
M1O4_LINE = _xraylib.M1O4_LINE
M1O5_LINE = _xraylib.M1O5_LINE
M1O6_LINE = _xraylib.M1O6_LINE
M1O7_LINE = _xraylib.M1O7_LINE
M1P1_LINE = _xraylib.M1P1_LINE
M1P2_LINE = _xraylib.M1P2_LINE
M1P3_LINE = _xraylib.M1P3_LINE
M1P4_LINE = _xraylib.M1P4_LINE
M1P5_LINE = _xraylib.M1P5_LINE
M2M3_LINE = _xraylib.M2M3_LINE
M2M4_LINE = _xraylib.M2M4_LINE
M2M5_LINE = _xraylib.M2M5_LINE
M2N1_LINE = _xraylib.M2N1_LINE
M2N2_LINE = _xraylib.M2N2_LINE
M2N3_LINE = _xraylib.M2N3_LINE
M2N4_LINE = _xraylib.M2N4_LINE
M2N5_LINE = _xraylib.M2N5_LINE
M2N6_LINE = _xraylib.M2N6_LINE
M2N7_LINE = _xraylib.M2N7_LINE
M2O1_LINE = _xraylib.M2O1_LINE
M2O2_LINE = _xraylib.M2O2_LINE
M2O3_LINE = _xraylib.M2O3_LINE
M2O4_LINE = _xraylib.M2O4_LINE
M2O5_LINE = _xraylib.M2O5_LINE
M2O6_LINE = _xraylib.M2O6_LINE
M2O7_LINE = _xraylib.M2O7_LINE
M2P1_LINE = _xraylib.M2P1_LINE
M2P2_LINE = _xraylib.M2P2_LINE
M2P3_LINE = _xraylib.M2P3_LINE
M2P4_LINE = _xraylib.M2P4_LINE
M2P5_LINE = _xraylib.M2P5_LINE
M3M4_LINE = _xraylib.M3M4_LINE
M3M5_LINE = _xraylib.M3M5_LINE
M3N1_LINE = _xraylib.M3N1_LINE
M3N2_LINE = _xraylib.M3N2_LINE
M3N3_LINE = _xraylib.M3N3_LINE
M3N4_LINE = _xraylib.M3N4_LINE
M3N5_LINE = _xraylib.M3N5_LINE
M3N6_LINE = _xraylib.M3N6_LINE
M3N7_LINE = _xraylib.M3N7_LINE
M3O1_LINE = _xraylib.M3O1_LINE
M3O2_LINE = _xraylib.M3O2_LINE
M3O3_LINE = _xraylib.M3O3_LINE
M3O4_LINE = _xraylib.M3O4_LINE
M3O5_LINE = _xraylib.M3O5_LINE
M3O6_LINE = _xraylib.M3O6_LINE
M3O7_LINE = _xraylib.M3O7_LINE
M3P1_LINE = _xraylib.M3P1_LINE
M3P2_LINE = _xraylib.M3P2_LINE
M3P3_LINE = _xraylib.M3P3_LINE
M3P4_LINE = _xraylib.M3P4_LINE
M3P5_LINE = _xraylib.M3P5_LINE
M3Q1_LINE = _xraylib.M3Q1_LINE
M4M5_LINE = _xraylib.M4M5_LINE
M4N1_LINE = _xraylib.M4N1_LINE
M4N2_LINE = _xraylib.M4N2_LINE
M4N3_LINE = _xraylib.M4N3_LINE
M4N4_LINE = _xraylib.M4N4_LINE
M4N5_LINE = _xraylib.M4N5_LINE
M4N6_LINE = _xraylib.M4N6_LINE
M4N7_LINE = _xraylib.M4N7_LINE
M4O1_LINE = _xraylib.M4O1_LINE
M4O2_LINE = _xraylib.M4O2_LINE
M4O3_LINE = _xraylib.M4O3_LINE
M4O4_LINE = _xraylib.M4O4_LINE
M4O5_LINE = _xraylib.M4O5_LINE
M4O6_LINE = _xraylib.M4O6_LINE
M4O7_LINE = _xraylib.M4O7_LINE
M4P1_LINE = _xraylib.M4P1_LINE
M4P2_LINE = _xraylib.M4P2_LINE
M4P3_LINE = _xraylib.M4P3_LINE
M4P4_LINE = _xraylib.M4P4_LINE
M4P5_LINE = _xraylib.M4P5_LINE
M5N1_LINE = _xraylib.M5N1_LINE
M5N2_LINE = _xraylib.M5N2_LINE
M5N3_LINE = _xraylib.M5N3_LINE
M5N4_LINE = _xraylib.M5N4_LINE
M5N5_LINE = _xraylib.M5N5_LINE
M5N6_LINE = _xraylib.M5N6_LINE
M5N7_LINE = _xraylib.M5N7_LINE
M5O1_LINE = _xraylib.M5O1_LINE
M5O2_LINE = _xraylib.M5O2_LINE
M5O3_LINE = _xraylib.M5O3_LINE
M5O4_LINE = _xraylib.M5O4_LINE
M5O5_LINE = _xraylib.M5O5_LINE
M5O6_LINE = _xraylib.M5O6_LINE
M5O7_LINE = _xraylib.M5O7_LINE
M5P1_LINE = _xraylib.M5P1_LINE
M5P2_LINE = _xraylib.M5P2_LINE
M5P3_LINE = _xraylib.M5P3_LINE
M5P4_LINE = _xraylib.M5P4_LINE
M5P5_LINE = _xraylib.M5P5_LINE
N1N2_LINE = _xraylib.N1N2_LINE
N1N3_LINE = _xraylib.N1N3_LINE
N1N4_LINE = _xraylib.N1N4_LINE
N1N5_LINE = _xraylib.N1N5_LINE
N1N6_LINE = _xraylib.N1N6_LINE
N1N7_LINE = _xraylib.N1N7_LINE
N1O1_LINE = _xraylib.N1O1_LINE
N1O2_LINE = _xraylib.N1O2_LINE
N1O3_LINE = _xraylib.N1O3_LINE
N1O4_LINE = _xraylib.N1O4_LINE
N1O5_LINE = _xraylib.N1O5_LINE
N1O6_LINE = _xraylib.N1O6_LINE
N1O7_LINE = _xraylib.N1O7_LINE
N1P1_LINE = _xraylib.N1P1_LINE
N1P2_LINE = _xraylib.N1P2_LINE
N1P3_LINE = _xraylib.N1P3_LINE
N1P4_LINE = _xraylib.N1P4_LINE
N1P5_LINE = _xraylib.N1P5_LINE
N2N3_LINE = _xraylib.N2N3_LINE
N2N4_LINE = _xraylib.N2N4_LINE
N2N5_LINE = _xraylib.N2N5_LINE
N2N6_LINE = _xraylib.N2N6_LINE
N2N7_LINE = _xraylib.N2N7_LINE
N2O1_LINE = _xraylib.N2O1_LINE
N2O2_LINE = _xraylib.N2O2_LINE
N2O3_LINE = _xraylib.N2O3_LINE
N2O4_LINE = _xraylib.N2O4_LINE
N2O5_LINE = _xraylib.N2O5_LINE
N2O6_LINE = _xraylib.N2O6_LINE
N2O7_LINE = _xraylib.N2O7_LINE
N2P1_LINE = _xraylib.N2P1_LINE
N2P2_LINE = _xraylib.N2P2_LINE
N2P3_LINE = _xraylib.N2P3_LINE
N2P4_LINE = _xraylib.N2P4_LINE
N2P5_LINE = _xraylib.N2P5_LINE
N3N4_LINE = _xraylib.N3N4_LINE
N3N5_LINE = _xraylib.N3N5_LINE
N3N6_LINE = _xraylib.N3N6_LINE
N3N7_LINE = _xraylib.N3N7_LINE
N3O1_LINE = _xraylib.N3O1_LINE
N3O2_LINE = _xraylib.N3O2_LINE
N3O3_LINE = _xraylib.N3O3_LINE
N3O4_LINE = _xraylib.N3O4_LINE
N3O5_LINE = _xraylib.N3O5_LINE
N3O6_LINE = _xraylib.N3O6_LINE
N3O7_LINE = _xraylib.N3O7_LINE
N3P1_LINE = _xraylib.N3P1_LINE
N3P2_LINE = _xraylib.N3P2_LINE
N3P3_LINE = _xraylib.N3P3_LINE
N3P4_LINE = _xraylib.N3P4_LINE
N3P5_LINE = _xraylib.N3P5_LINE
N4N5_LINE = _xraylib.N4N5_LINE
N4N6_LINE = _xraylib.N4N6_LINE
N4N7_LINE = _xraylib.N4N7_LINE
N4O1_LINE = _xraylib.N4O1_LINE
N4O2_LINE = _xraylib.N4O2_LINE
N4O3_LINE = _xraylib.N4O3_LINE
N4O4_LINE = _xraylib.N4O4_LINE
N4O5_LINE = _xraylib.N4O5_LINE
N4O6_LINE = _xraylib.N4O6_LINE
N4O7_LINE = _xraylib.N4O7_LINE
N4P1_LINE = _xraylib.N4P1_LINE
N4P2_LINE = _xraylib.N4P2_LINE
N4P3_LINE = _xraylib.N4P3_LINE
N4P4_LINE = _xraylib.N4P4_LINE
N4P5_LINE = _xraylib.N4P5_LINE
N5N6_LINE = _xraylib.N5N6_LINE
N5N7_LINE = _xraylib.N5N7_LINE
N5O1_LINE = _xraylib.N5O1_LINE
N5O2_LINE = _xraylib.N5O2_LINE
N5O3_LINE = _xraylib.N5O3_LINE
N5O4_LINE = _xraylib.N5O4_LINE
N5O5_LINE = _xraylib.N5O5_LINE
N5O6_LINE = _xraylib.N5O6_LINE
N5O7_LINE = _xraylib.N5O7_LINE
N5P1_LINE = _xraylib.N5P1_LINE
N5P2_LINE = _xraylib.N5P2_LINE
N5P3_LINE = _xraylib.N5P3_LINE
N5P4_LINE = _xraylib.N5P4_LINE
N5P5_LINE = _xraylib.N5P5_LINE
N6N7_LINE = _xraylib.N6N7_LINE
N6O1_LINE = _xraylib.N6O1_LINE
N6O2_LINE = _xraylib.N6O2_LINE
N6O3_LINE = _xraylib.N6O3_LINE
N6O4_LINE = _xraylib.N6O4_LINE
N6O5_LINE = _xraylib.N6O5_LINE
N6O6_LINE = _xraylib.N6O6_LINE
N6O7_LINE = _xraylib.N6O7_LINE
N6P1_LINE = _xraylib.N6P1_LINE
N6P2_LINE = _xraylib.N6P2_LINE
N6P3_LINE = _xraylib.N6P3_LINE
N6P4_LINE = _xraylib.N6P4_LINE
N6P5_LINE = _xraylib.N6P5_LINE
N7O1_LINE = _xraylib.N7O1_LINE
N7O2_LINE = _xraylib.N7O2_LINE
N7O3_LINE = _xraylib.N7O3_LINE
N7O4_LINE = _xraylib.N7O4_LINE
N7O5_LINE = _xraylib.N7O5_LINE
N7O6_LINE = _xraylib.N7O6_LINE
N7O7_LINE = _xraylib.N7O7_LINE
N7P1_LINE = _xraylib.N7P1_LINE
N7P2_LINE = _xraylib.N7P2_LINE
N7P3_LINE = _xraylib.N7P3_LINE
N7P4_LINE = _xraylib.N7P4_LINE
N7P5_LINE = _xraylib.N7P5_LINE
O1O2_LINE = _xraylib.O1O2_LINE
O1O3_LINE = _xraylib.O1O3_LINE
O1O4_LINE = _xraylib.O1O4_LINE
O1O5_LINE = _xraylib.O1O5_LINE
O1O6_LINE = _xraylib.O1O6_LINE
O1O7_LINE = _xraylib.O1O7_LINE
O1P1_LINE = _xraylib.O1P1_LINE
O1P2_LINE = _xraylib.O1P2_LINE
O1P3_LINE = _xraylib.O1P3_LINE
O1P4_LINE = _xraylib.O1P4_LINE
O1P5_LINE = _xraylib.O1P5_LINE
O2O3_LINE = _xraylib.O2O3_LINE
O2O4_LINE = _xraylib.O2O4_LINE
O2O5_LINE = _xraylib.O2O5_LINE
O2O6_LINE = _xraylib.O2O6_LINE
O2O7_LINE = _xraylib.O2O7_LINE
O2P1_LINE = _xraylib.O2P1_LINE
O2P2_LINE = _xraylib.O2P2_LINE
O2P3_LINE = _xraylib.O2P3_LINE
O2P4_LINE = _xraylib.O2P4_LINE
O2P5_LINE = _xraylib.O2P5_LINE
O3O4_LINE = _xraylib.O3O4_LINE
O3O5_LINE = _xraylib.O3O5_LINE
O3O6_LINE = _xraylib.O3O6_LINE
O3O7_LINE = _xraylib.O3O7_LINE
O3P1_LINE = _xraylib.O3P1_LINE
O3P2_LINE = _xraylib.O3P2_LINE
O3P3_LINE = _xraylib.O3P3_LINE
O3P4_LINE = _xraylib.O3P4_LINE
O3P5_LINE = _xraylib.O3P5_LINE
O4O5_LINE = _xraylib.O4O5_LINE
O4O6_LINE = _xraylib.O4O6_LINE
O4O7_LINE = _xraylib.O4O7_LINE
O4P1_LINE = _xraylib.O4P1_LINE
O4P2_LINE = _xraylib.O4P2_LINE
O4P3_LINE = _xraylib.O4P3_LINE
O4P4_LINE = _xraylib.O4P4_LINE
O4P5_LINE = _xraylib.O4P5_LINE
O5O6_LINE = _xraylib.O5O6_LINE
O5O7_LINE = _xraylib.O5O7_LINE
O5P1_LINE = _xraylib.O5P1_LINE
O5P2_LINE = _xraylib.O5P2_LINE
O5P3_LINE = _xraylib.O5P3_LINE
O5P4_LINE = _xraylib.O5P4_LINE
O5P5_LINE = _xraylib.O5P5_LINE
O6O7_LINE = _xraylib.O6O7_LINE
O6P4_LINE = _xraylib.O6P4_LINE
O6P5_LINE = _xraylib.O6P5_LINE
O7P4_LINE = _xraylib.O7P4_LINE
O7P5_LINE = _xraylib.O7P5_LINE
P1P2_LINE = _xraylib.P1P2_LINE
P1P3_LINE = _xraylib.P1P3_LINE
P1P4_LINE = _xraylib.P1P4_LINE
P1P5_LINE = _xraylib.P1P5_LINE
P2P3_LINE = _xraylib.P2P3_LINE
P2P4_LINE = _xraylib.P2P4_LINE
P2P5_LINE = _xraylib.P2P5_LINE
P3P4_LINE = _xraylib.P3P4_LINE
P3P5_LINE = _xraylib.P3P5_LINE

def CompoundParser(compoundString):
    """
    CompoundParser(char const [] compoundString) -> struct compoundData *

    Parameters
    ----------
    compoundString: char const []

    """
    return _xraylib.CompoundParser(compoundString)

def add_compound_data(A, weightA, B, weightB):
    """
    add_compound_data(struct compoundData A, double weightA, struct compoundData B, double weightB) -> struct compoundData *

    Parameters
    ----------
    A: struct compoundData
    weightA: double
    B: struct compoundData
    weightB: double

    """
    return _xraylib.add_compound_data(A, weightA, B, weightB)

def AtomicNumberToSymbol(Z):
    """
    AtomicNumberToSymbol(int Z) -> char *

    Parameters
    ----------
    Z: int

    """
    return _xraylib.AtomicNumberToSymbol(Z)

def SymbolToAtomicNumber(symbol):
    """
    SymbolToAtomicNumber(char const * symbol) -> int

    Parameters
    ----------
    symbol: char const *

    """
    return _xraylib.SymbolToAtomicNumber(symbol)
K_L1L1_AUGER = _xraylib.K_L1L1_AUGER
K_L1L2_AUGER = _xraylib.K_L1L2_AUGER
K_L1L3_AUGER = _xraylib.K_L1L3_AUGER
K_L1M1_AUGER = _xraylib.K_L1M1_AUGER
K_L1M2_AUGER = _xraylib.K_L1M2_AUGER
K_L1M3_AUGER = _xraylib.K_L1M3_AUGER
K_L1M4_AUGER = _xraylib.K_L1M4_AUGER
K_L1M5_AUGER = _xraylib.K_L1M5_AUGER
K_L1N1_AUGER = _xraylib.K_L1N1_AUGER
K_L1N2_AUGER = _xraylib.K_L1N2_AUGER
K_L1N3_AUGER = _xraylib.K_L1N3_AUGER
K_L1N4_AUGER = _xraylib.K_L1N4_AUGER
K_L1N5_AUGER = _xraylib.K_L1N5_AUGER
K_L1N6_AUGER = _xraylib.K_L1N6_AUGER
K_L1N7_AUGER = _xraylib.K_L1N7_AUGER
K_L1O1_AUGER = _xraylib.K_L1O1_AUGER
K_L1O2_AUGER = _xraylib.K_L1O2_AUGER
K_L1O3_AUGER = _xraylib.K_L1O3_AUGER
K_L1O4_AUGER = _xraylib.K_L1O4_AUGER
K_L1O5_AUGER = _xraylib.K_L1O5_AUGER
K_L1O6_AUGER = _xraylib.K_L1O6_AUGER
K_L1O7_AUGER = _xraylib.K_L1O7_AUGER
K_L1P1_AUGER = _xraylib.K_L1P1_AUGER
K_L1P2_AUGER = _xraylib.K_L1P2_AUGER
K_L1P3_AUGER = _xraylib.K_L1P3_AUGER
K_L1P4_AUGER = _xraylib.K_L1P4_AUGER
K_L1P5_AUGER = _xraylib.K_L1P5_AUGER
K_L1Q1_AUGER = _xraylib.K_L1Q1_AUGER
K_L1Q2_AUGER = _xraylib.K_L1Q2_AUGER
K_L1Q3_AUGER = _xraylib.K_L1Q3_AUGER
K_L2L1_AUGER = _xraylib.K_L2L1_AUGER
K_L2L2_AUGER = _xraylib.K_L2L2_AUGER
K_L2L3_AUGER = _xraylib.K_L2L3_AUGER
K_L2M1_AUGER = _xraylib.K_L2M1_AUGER
K_L2M2_AUGER = _xraylib.K_L2M2_AUGER
K_L2M3_AUGER = _xraylib.K_L2M3_AUGER
K_L2M4_AUGER = _xraylib.K_L2M4_AUGER
K_L2M5_AUGER = _xraylib.K_L2M5_AUGER
K_L2N1_AUGER = _xraylib.K_L2N1_AUGER
K_L2N2_AUGER = _xraylib.K_L2N2_AUGER
K_L2N3_AUGER = _xraylib.K_L2N3_AUGER
K_L2N4_AUGER = _xraylib.K_L2N4_AUGER
K_L2N5_AUGER = _xraylib.K_L2N5_AUGER
K_L2N6_AUGER = _xraylib.K_L2N6_AUGER
K_L2N7_AUGER = _xraylib.K_L2N7_AUGER
K_L2O1_AUGER = _xraylib.K_L2O1_AUGER
K_L2O2_AUGER = _xraylib.K_L2O2_AUGER
K_L2O3_AUGER = _xraylib.K_L2O3_AUGER
K_L2O4_AUGER = _xraylib.K_L2O4_AUGER
K_L2O5_AUGER = _xraylib.K_L2O5_AUGER
K_L2O6_AUGER = _xraylib.K_L2O6_AUGER
K_L2O7_AUGER = _xraylib.K_L2O7_AUGER
K_L2P1_AUGER = _xraylib.K_L2P1_AUGER
K_L2P2_AUGER = _xraylib.K_L2P2_AUGER
K_L2P3_AUGER = _xraylib.K_L2P3_AUGER
K_L2P4_AUGER = _xraylib.K_L2P4_AUGER
K_L2P5_AUGER = _xraylib.K_L2P5_AUGER
K_L2Q1_AUGER = _xraylib.K_L2Q1_AUGER
K_L2Q2_AUGER = _xraylib.K_L2Q2_AUGER
K_L2Q3_AUGER = _xraylib.K_L2Q3_AUGER
K_L3L1_AUGER = _xraylib.K_L3L1_AUGER
K_L3L2_AUGER = _xraylib.K_L3L2_AUGER
K_L3L3_AUGER = _xraylib.K_L3L3_AUGER
K_L3M1_AUGER = _xraylib.K_L3M1_AUGER
K_L3M2_AUGER = _xraylib.K_L3M2_AUGER
K_L3M3_AUGER = _xraylib.K_L3M3_AUGER
K_L3M4_AUGER = _xraylib.K_L3M4_AUGER
K_L3M5_AUGER = _xraylib.K_L3M5_AUGER
K_L3N1_AUGER = _xraylib.K_L3N1_AUGER
K_L3N2_AUGER = _xraylib.K_L3N2_AUGER
K_L3N3_AUGER = _xraylib.K_L3N3_AUGER
K_L3N4_AUGER = _xraylib.K_L3N4_AUGER
K_L3N5_AUGER = _xraylib.K_L3N5_AUGER
K_L3N6_AUGER = _xraylib.K_L3N6_AUGER
K_L3N7_AUGER = _xraylib.K_L3N7_AUGER
K_L3O1_AUGER = _xraylib.K_L3O1_AUGER
K_L3O2_AUGER = _xraylib.K_L3O2_AUGER
K_L3O3_AUGER = _xraylib.K_L3O3_AUGER
K_L3O4_AUGER = _xraylib.K_L3O4_AUGER
K_L3O5_AUGER = _xraylib.K_L3O5_AUGER
K_L3O6_AUGER = _xraylib.K_L3O6_AUGER
K_L3O7_AUGER = _xraylib.K_L3O7_AUGER
K_L3P1_AUGER = _xraylib.K_L3P1_AUGER
K_L3P2_AUGER = _xraylib.K_L3P2_AUGER
K_L3P3_AUGER = _xraylib.K_L3P3_AUGER
K_L3P4_AUGER = _xraylib.K_L3P4_AUGER
K_L3P5_AUGER = _xraylib.K_L3P5_AUGER
K_L3Q1_AUGER = _xraylib.K_L3Q1_AUGER
K_L3Q2_AUGER = _xraylib.K_L3Q2_AUGER
K_L3Q3_AUGER = _xraylib.K_L3Q3_AUGER
K_M1L1_AUGER = _xraylib.K_M1L1_AUGER
K_M1L2_AUGER = _xraylib.K_M1L2_AUGER
K_M1L3_AUGER = _xraylib.K_M1L3_AUGER
K_M1M1_AUGER = _xraylib.K_M1M1_AUGER
K_M1M2_AUGER = _xraylib.K_M1M2_AUGER
K_M1M3_AUGER = _xraylib.K_M1M3_AUGER
K_M1M4_AUGER = _xraylib.K_M1M4_AUGER
K_M1M5_AUGER = _xraylib.K_M1M5_AUGER
K_M1N1_AUGER = _xraylib.K_M1N1_AUGER
K_M1N2_AUGER = _xraylib.K_M1N2_AUGER
K_M1N3_AUGER = _xraylib.K_M1N3_AUGER
K_M1N4_AUGER = _xraylib.K_M1N4_AUGER
K_M1N5_AUGER = _xraylib.K_M1N5_AUGER
K_M1N6_AUGER = _xraylib.K_M1N6_AUGER
K_M1N7_AUGER = _xraylib.K_M1N7_AUGER
K_M1O1_AUGER = _xraylib.K_M1O1_AUGER
K_M1O2_AUGER = _xraylib.K_M1O2_AUGER
K_M1O3_AUGER = _xraylib.K_M1O3_AUGER
K_M1O4_AUGER = _xraylib.K_M1O4_AUGER
K_M1O5_AUGER = _xraylib.K_M1O5_AUGER
K_M1O6_AUGER = _xraylib.K_M1O6_AUGER
K_M1O7_AUGER = _xraylib.K_M1O7_AUGER
K_M1P1_AUGER = _xraylib.K_M1P1_AUGER
K_M1P2_AUGER = _xraylib.K_M1P2_AUGER
K_M1P3_AUGER = _xraylib.K_M1P3_AUGER
K_M1P4_AUGER = _xraylib.K_M1P4_AUGER
K_M1P5_AUGER = _xraylib.K_M1P5_AUGER
K_M1Q1_AUGER = _xraylib.K_M1Q1_AUGER
K_M1Q2_AUGER = _xraylib.K_M1Q2_AUGER
K_M1Q3_AUGER = _xraylib.K_M1Q3_AUGER
K_M2L1_AUGER = _xraylib.K_M2L1_AUGER
K_M2L2_AUGER = _xraylib.K_M2L2_AUGER
K_M2L3_AUGER = _xraylib.K_M2L3_AUGER
K_M2M1_AUGER = _xraylib.K_M2M1_AUGER
K_M2M2_AUGER = _xraylib.K_M2M2_AUGER
K_M2M3_AUGER = _xraylib.K_M2M3_AUGER
K_M2M4_AUGER = _xraylib.K_M2M4_AUGER
K_M2M5_AUGER = _xraylib.K_M2M5_AUGER
K_M2N1_AUGER = _xraylib.K_M2N1_AUGER
K_M2N2_AUGER = _xraylib.K_M2N2_AUGER
K_M2N3_AUGER = _xraylib.K_M2N3_AUGER
K_M2N4_AUGER = _xraylib.K_M2N4_AUGER
K_M2N5_AUGER = _xraylib.K_M2N5_AUGER
K_M2N6_AUGER = _xraylib.K_M2N6_AUGER
K_M2N7_AUGER = _xraylib.K_M2N7_AUGER
K_M2O1_AUGER = _xraylib.K_M2O1_AUGER
K_M2O2_AUGER = _xraylib.K_M2O2_AUGER
K_M2O3_AUGER = _xraylib.K_M2O3_AUGER
K_M2O4_AUGER = _xraylib.K_M2O4_AUGER
K_M2O5_AUGER = _xraylib.K_M2O5_AUGER
K_M2O6_AUGER = _xraylib.K_M2O6_AUGER
K_M2O7_AUGER = _xraylib.K_M2O7_AUGER
K_M2P1_AUGER = _xraylib.K_M2P1_AUGER
K_M2P2_AUGER = _xraylib.K_M2P2_AUGER
K_M2P3_AUGER = _xraylib.K_M2P3_AUGER
K_M2P4_AUGER = _xraylib.K_M2P4_AUGER
K_M2P5_AUGER = _xraylib.K_M2P5_AUGER
K_M2Q1_AUGER = _xraylib.K_M2Q1_AUGER
K_M2Q2_AUGER = _xraylib.K_M2Q2_AUGER
K_M2Q3_AUGER = _xraylib.K_M2Q3_AUGER
K_M3L1_AUGER = _xraylib.K_M3L1_AUGER
K_M3L2_AUGER = _xraylib.K_M3L2_AUGER
K_M3L3_AUGER = _xraylib.K_M3L3_AUGER
K_M3M1_AUGER = _xraylib.K_M3M1_AUGER
K_M3M2_AUGER = _xraylib.K_M3M2_AUGER
K_M3M3_AUGER = _xraylib.K_M3M3_AUGER
K_M3M4_AUGER = _xraylib.K_M3M4_AUGER
K_M3M5_AUGER = _xraylib.K_M3M5_AUGER
K_M3N1_AUGER = _xraylib.K_M3N1_AUGER
K_M3N2_AUGER = _xraylib.K_M3N2_AUGER
K_M3N3_AUGER = _xraylib.K_M3N3_AUGER
K_M3N4_AUGER = _xraylib.K_M3N4_AUGER
K_M3N5_AUGER = _xraylib.K_M3N5_AUGER
K_M3N6_AUGER = _xraylib.K_M3N6_AUGER
K_M3N7_AUGER = _xraylib.K_M3N7_AUGER
K_M3O1_AUGER = _xraylib.K_M3O1_AUGER
K_M3O2_AUGER = _xraylib.K_M3O2_AUGER
K_M3O3_AUGER = _xraylib.K_M3O3_AUGER
K_M3O4_AUGER = _xraylib.K_M3O4_AUGER
K_M3O5_AUGER = _xraylib.K_M3O5_AUGER
K_M3O6_AUGER = _xraylib.K_M3O6_AUGER
K_M3O7_AUGER = _xraylib.K_M3O7_AUGER
K_M3P1_AUGER = _xraylib.K_M3P1_AUGER
K_M3P2_AUGER = _xraylib.K_M3P2_AUGER
K_M3P3_AUGER = _xraylib.K_M3P3_AUGER
K_M3P4_AUGER = _xraylib.K_M3P4_AUGER
K_M3P5_AUGER = _xraylib.K_M3P5_AUGER
K_M3Q1_AUGER = _xraylib.K_M3Q1_AUGER
K_M3Q2_AUGER = _xraylib.K_M3Q2_AUGER
K_M3Q3_AUGER = _xraylib.K_M3Q3_AUGER
K_M4L1_AUGER = _xraylib.K_M4L1_AUGER
K_M4L2_AUGER = _xraylib.K_M4L2_AUGER
K_M4L3_AUGER = _xraylib.K_M4L3_AUGER
K_M4M1_AUGER = _xraylib.K_M4M1_AUGER
K_M4M2_AUGER = _xraylib.K_M4M2_AUGER
K_M4M3_AUGER = _xraylib.K_M4M3_AUGER
K_M4M4_AUGER = _xraylib.K_M4M4_AUGER
K_M4M5_AUGER = _xraylib.K_M4M5_AUGER
K_M4N1_AUGER = _xraylib.K_M4N1_AUGER
K_M4N2_AUGER = _xraylib.K_M4N2_AUGER
K_M4N3_AUGER = _xraylib.K_M4N3_AUGER
K_M4N4_AUGER = _xraylib.K_M4N4_AUGER
K_M4N5_AUGER = _xraylib.K_M4N5_AUGER
K_M4N6_AUGER = _xraylib.K_M4N6_AUGER
K_M4N7_AUGER = _xraylib.K_M4N7_AUGER
K_M4O1_AUGER = _xraylib.K_M4O1_AUGER
K_M4O2_AUGER = _xraylib.K_M4O2_AUGER
K_M4O3_AUGER = _xraylib.K_M4O3_AUGER
K_M4O4_AUGER = _xraylib.K_M4O4_AUGER
K_M4O5_AUGER = _xraylib.K_M4O5_AUGER
K_M4O6_AUGER = _xraylib.K_M4O6_AUGER
K_M4O7_AUGER = _xraylib.K_M4O7_AUGER
K_M4P1_AUGER = _xraylib.K_M4P1_AUGER
K_M4P2_AUGER = _xraylib.K_M4P2_AUGER
K_M4P3_AUGER = _xraylib.K_M4P3_AUGER
K_M4P4_AUGER = _xraylib.K_M4P4_AUGER
K_M4P5_AUGER = _xraylib.K_M4P5_AUGER
K_M4Q1_AUGER = _xraylib.K_M4Q1_AUGER
K_M4Q2_AUGER = _xraylib.K_M4Q2_AUGER
K_M4Q3_AUGER = _xraylib.K_M4Q3_AUGER
K_M5L1_AUGER = _xraylib.K_M5L1_AUGER
K_M5L2_AUGER = _xraylib.K_M5L2_AUGER
K_M5L3_AUGER = _xraylib.K_M5L3_AUGER
K_M5M1_AUGER = _xraylib.K_M5M1_AUGER
K_M5M2_AUGER = _xraylib.K_M5M2_AUGER
K_M5M3_AUGER = _xraylib.K_M5M3_AUGER
K_M5M4_AUGER = _xraylib.K_M5M4_AUGER
K_M5M5_AUGER = _xraylib.K_M5M5_AUGER
K_M5N1_AUGER = _xraylib.K_M5N1_AUGER
K_M5N2_AUGER = _xraylib.K_M5N2_AUGER
K_M5N3_AUGER = _xraylib.K_M5N3_AUGER
K_M5N4_AUGER = _xraylib.K_M5N4_AUGER
K_M5N5_AUGER = _xraylib.K_M5N5_AUGER
K_M5N6_AUGER = _xraylib.K_M5N6_AUGER
K_M5N7_AUGER = _xraylib.K_M5N7_AUGER
K_M5O1_AUGER = _xraylib.K_M5O1_AUGER
K_M5O2_AUGER = _xraylib.K_M5O2_AUGER
K_M5O3_AUGER = _xraylib.K_M5O3_AUGER
K_M5O4_AUGER = _xraylib.K_M5O4_AUGER
K_M5O5_AUGER = _xraylib.K_M5O5_AUGER
K_M5O6_AUGER = _xraylib.K_M5O6_AUGER
K_M5O7_AUGER = _xraylib.K_M5O7_AUGER
K_M5P1_AUGER = _xraylib.K_M5P1_AUGER
K_M5P2_AUGER = _xraylib.K_M5P2_AUGER
K_M5P3_AUGER = _xraylib.K_M5P3_AUGER
K_M5P4_AUGER = _xraylib.K_M5P4_AUGER
K_M5P5_AUGER = _xraylib.K_M5P5_AUGER
K_M5Q1_AUGER = _xraylib.K_M5Q1_AUGER
K_M5Q2_AUGER = _xraylib.K_M5Q2_AUGER
K_M5Q3_AUGER = _xraylib.K_M5Q3_AUGER
L1_L2L2_AUGER = _xraylib.L1_L2L2_AUGER
L1_L2L3_AUGER = _xraylib.L1_L2L3_AUGER
L1_L2M1_AUGER = _xraylib.L1_L2M1_AUGER
L1_L2M2_AUGER = _xraylib.L1_L2M2_AUGER
L1_L2M3_AUGER = _xraylib.L1_L2M3_AUGER
L1_L2M4_AUGER = _xraylib.L1_L2M4_AUGER
L1_L2M5_AUGER = _xraylib.L1_L2M5_AUGER
L1_L2N1_AUGER = _xraylib.L1_L2N1_AUGER
L1_L2N2_AUGER = _xraylib.L1_L2N2_AUGER
L1_L2N3_AUGER = _xraylib.L1_L2N3_AUGER
L1_L2N4_AUGER = _xraylib.L1_L2N4_AUGER
L1_L2N5_AUGER = _xraylib.L1_L2N5_AUGER
L1_L2N6_AUGER = _xraylib.L1_L2N6_AUGER
L1_L2N7_AUGER = _xraylib.L1_L2N7_AUGER
L1_L2O1_AUGER = _xraylib.L1_L2O1_AUGER
L1_L2O2_AUGER = _xraylib.L1_L2O2_AUGER
L1_L2O3_AUGER = _xraylib.L1_L2O3_AUGER
L1_L2O4_AUGER = _xraylib.L1_L2O4_AUGER
L1_L2O5_AUGER = _xraylib.L1_L2O5_AUGER
L1_L2O6_AUGER = _xraylib.L1_L2O6_AUGER
L1_L2O7_AUGER = _xraylib.L1_L2O7_AUGER
L1_L2P1_AUGER = _xraylib.L1_L2P1_AUGER
L1_L2P2_AUGER = _xraylib.L1_L2P2_AUGER
L1_L2P3_AUGER = _xraylib.L1_L2P3_AUGER
L1_L2P4_AUGER = _xraylib.L1_L2P4_AUGER
L1_L2P5_AUGER = _xraylib.L1_L2P5_AUGER
L1_L2Q1_AUGER = _xraylib.L1_L2Q1_AUGER
L1_L2Q2_AUGER = _xraylib.L1_L2Q2_AUGER
L1_L2Q3_AUGER = _xraylib.L1_L2Q3_AUGER
L1_L3L2_AUGER = _xraylib.L1_L3L2_AUGER
L1_L3L3_AUGER = _xraylib.L1_L3L3_AUGER
L1_L3M1_AUGER = _xraylib.L1_L3M1_AUGER
L1_L3M2_AUGER = _xraylib.L1_L3M2_AUGER
L1_L3M3_AUGER = _xraylib.L1_L3M3_AUGER
L1_L3M4_AUGER = _xraylib.L1_L3M4_AUGER
L1_L3M5_AUGER = _xraylib.L1_L3M5_AUGER
L1_L3N1_AUGER = _xraylib.L1_L3N1_AUGER
L1_L3N2_AUGER = _xraylib.L1_L3N2_AUGER
L1_L3N3_AUGER = _xraylib.L1_L3N3_AUGER
L1_L3N4_AUGER = _xraylib.L1_L3N4_AUGER
L1_L3N5_AUGER = _xraylib.L1_L3N5_AUGER
L1_L3N6_AUGER = _xraylib.L1_L3N6_AUGER
L1_L3N7_AUGER = _xraylib.L1_L3N7_AUGER
L1_L3O1_AUGER = _xraylib.L1_L3O1_AUGER
L1_L3O2_AUGER = _xraylib.L1_L3O2_AUGER
L1_L3O3_AUGER = _xraylib.L1_L3O3_AUGER
L1_L3O4_AUGER = _xraylib.L1_L3O4_AUGER
L1_L3O5_AUGER = _xraylib.L1_L3O5_AUGER
L1_L3O6_AUGER = _xraylib.L1_L3O6_AUGER
L1_L3O7_AUGER = _xraylib.L1_L3O7_AUGER
L1_L3P1_AUGER = _xraylib.L1_L3P1_AUGER
L1_L3P2_AUGER = _xraylib.L1_L3P2_AUGER
L1_L3P3_AUGER = _xraylib.L1_L3P3_AUGER
L1_L3P4_AUGER = _xraylib.L1_L3P4_AUGER
L1_L3P5_AUGER = _xraylib.L1_L3P5_AUGER
L1_L3Q1_AUGER = _xraylib.L1_L3Q1_AUGER
L1_L3Q2_AUGER = _xraylib.L1_L3Q2_AUGER
L1_L3Q3_AUGER = _xraylib.L1_L3Q3_AUGER
L1_M1L2_AUGER = _xraylib.L1_M1L2_AUGER
L1_M1L3_AUGER = _xraylib.L1_M1L3_AUGER
L1_M1M1_AUGER = _xraylib.L1_M1M1_AUGER
L1_M1M2_AUGER = _xraylib.L1_M1M2_AUGER
L1_M1M3_AUGER = _xraylib.L1_M1M3_AUGER
L1_M1M4_AUGER = _xraylib.L1_M1M4_AUGER
L1_M1M5_AUGER = _xraylib.L1_M1M5_AUGER
L1_M1N1_AUGER = _xraylib.L1_M1N1_AUGER
L1_M1N2_AUGER = _xraylib.L1_M1N2_AUGER
L1_M1N3_AUGER = _xraylib.L1_M1N3_AUGER
L1_M1N4_AUGER = _xraylib.L1_M1N4_AUGER
L1_M1N5_AUGER = _xraylib.L1_M1N5_AUGER
L1_M1N6_AUGER = _xraylib.L1_M1N6_AUGER
L1_M1N7_AUGER = _xraylib.L1_M1N7_AUGER
L1_M1O1_AUGER = _xraylib.L1_M1O1_AUGER
L1_M1O2_AUGER = _xraylib.L1_M1O2_AUGER
L1_M1O3_AUGER = _xraylib.L1_M1O3_AUGER
L1_M1O4_AUGER = _xraylib.L1_M1O4_AUGER
L1_M1O5_AUGER = _xraylib.L1_M1O5_AUGER
L1_M1O6_AUGER = _xraylib.L1_M1O6_AUGER
L1_M1O7_AUGER = _xraylib.L1_M1O7_AUGER
L1_M1P1_AUGER = _xraylib.L1_M1P1_AUGER
L1_M1P2_AUGER = _xraylib.L1_M1P2_AUGER
L1_M1P3_AUGER = _xraylib.L1_M1P3_AUGER
L1_M1P4_AUGER = _xraylib.L1_M1P4_AUGER
L1_M1P5_AUGER = _xraylib.L1_M1P5_AUGER
L1_M1Q1_AUGER = _xraylib.L1_M1Q1_AUGER
L1_M1Q2_AUGER = _xraylib.L1_M1Q2_AUGER
L1_M1Q3_AUGER = _xraylib.L1_M1Q3_AUGER
L1_M2L2_AUGER = _xraylib.L1_M2L2_AUGER
L1_M2L3_AUGER = _xraylib.L1_M2L3_AUGER
L1_M2M1_AUGER = _xraylib.L1_M2M1_AUGER
L1_M2M2_AUGER = _xraylib.L1_M2M2_AUGER
L1_M2M3_AUGER = _xraylib.L1_M2M3_AUGER
L1_M2M4_AUGER = _xraylib.L1_M2M4_AUGER
L1_M2M5_AUGER = _xraylib.L1_M2M5_AUGER
L1_M2N1_AUGER = _xraylib.L1_M2N1_AUGER
L1_M2N2_AUGER = _xraylib.L1_M2N2_AUGER
L1_M2N3_AUGER = _xraylib.L1_M2N3_AUGER
L1_M2N4_AUGER = _xraylib.L1_M2N4_AUGER
L1_M2N5_AUGER = _xraylib.L1_M2N5_AUGER
L1_M2N6_AUGER = _xraylib.L1_M2N6_AUGER
L1_M2N7_AUGER = _xraylib.L1_M2N7_AUGER
L1_M2O1_AUGER = _xraylib.L1_M2O1_AUGER
L1_M2O2_AUGER = _xraylib.L1_M2O2_AUGER
L1_M2O3_AUGER = _xraylib.L1_M2O3_AUGER
L1_M2O4_AUGER = _xraylib.L1_M2O4_AUGER
L1_M2O5_AUGER = _xraylib.L1_M2O5_AUGER
L1_M2O6_AUGER = _xraylib.L1_M2O6_AUGER
L1_M2O7_AUGER = _xraylib.L1_M2O7_AUGER
L1_M2P1_AUGER = _xraylib.L1_M2P1_AUGER
L1_M2P2_AUGER = _xraylib.L1_M2P2_AUGER
L1_M2P3_AUGER = _xraylib.L1_M2P3_AUGER
L1_M2P4_AUGER = _xraylib.L1_M2P4_AUGER
L1_M2P5_AUGER = _xraylib.L1_M2P5_AUGER
L1_M2Q1_AUGER = _xraylib.L1_M2Q1_AUGER
L1_M2Q2_AUGER = _xraylib.L1_M2Q2_AUGER
L1_M2Q3_AUGER = _xraylib.L1_M2Q3_AUGER
L1_M3L2_AUGER = _xraylib.L1_M3L2_AUGER
L1_M3L3_AUGER = _xraylib.L1_M3L3_AUGER
L1_M3M1_AUGER = _xraylib.L1_M3M1_AUGER
L1_M3M2_AUGER = _xraylib.L1_M3M2_AUGER
L1_M3M3_AUGER = _xraylib.L1_M3M3_AUGER
L1_M3M4_AUGER = _xraylib.L1_M3M4_AUGER
L1_M3M5_AUGER = _xraylib.L1_M3M5_AUGER
L1_M3N1_AUGER = _xraylib.L1_M3N1_AUGER
L1_M3N2_AUGER = _xraylib.L1_M3N2_AUGER
L1_M3N3_AUGER = _xraylib.L1_M3N3_AUGER
L1_M3N4_AUGER = _xraylib.L1_M3N4_AUGER
L1_M3N5_AUGER = _xraylib.L1_M3N5_AUGER
L1_M3N6_AUGER = _xraylib.L1_M3N6_AUGER
L1_M3N7_AUGER = _xraylib.L1_M3N7_AUGER
L1_M3O1_AUGER = _xraylib.L1_M3O1_AUGER
L1_M3O2_AUGER = _xraylib.L1_M3O2_AUGER
L1_M3O3_AUGER = _xraylib.L1_M3O3_AUGER
L1_M3O4_AUGER = _xraylib.L1_M3O4_AUGER
L1_M3O5_AUGER = _xraylib.L1_M3O5_AUGER
L1_M3O6_AUGER = _xraylib.L1_M3O6_AUGER
L1_M3O7_AUGER = _xraylib.L1_M3O7_AUGER
L1_M3P1_AUGER = _xraylib.L1_M3P1_AUGER
L1_M3P2_AUGER = _xraylib.L1_M3P2_AUGER
L1_M3P3_AUGER = _xraylib.L1_M3P3_AUGER
L1_M3P4_AUGER = _xraylib.L1_M3P4_AUGER
L1_M3P5_AUGER = _xraylib.L1_M3P5_AUGER
L1_M3Q1_AUGER = _xraylib.L1_M3Q1_AUGER
L1_M3Q2_AUGER = _xraylib.L1_M3Q2_AUGER
L1_M3Q3_AUGER = _xraylib.L1_M3Q3_AUGER
L1_M4L2_AUGER = _xraylib.L1_M4L2_AUGER
L1_M4L3_AUGER = _xraylib.L1_M4L3_AUGER
L1_M4M1_AUGER = _xraylib.L1_M4M1_AUGER
L1_M4M2_AUGER = _xraylib.L1_M4M2_AUGER
L1_M4M3_AUGER = _xraylib.L1_M4M3_AUGER
L1_M4M4_AUGER = _xraylib.L1_M4M4_AUGER
L1_M4M5_AUGER = _xraylib.L1_M4M5_AUGER
L1_M4N1_AUGER = _xraylib.L1_M4N1_AUGER
L1_M4N2_AUGER = _xraylib.L1_M4N2_AUGER
L1_M4N3_AUGER = _xraylib.L1_M4N3_AUGER
L1_M4N4_AUGER = _xraylib.L1_M4N4_AUGER
L1_M4N5_AUGER = _xraylib.L1_M4N5_AUGER
L1_M4N6_AUGER = _xraylib.L1_M4N6_AUGER
L1_M4N7_AUGER = _xraylib.L1_M4N7_AUGER
L1_M4O1_AUGER = _xraylib.L1_M4O1_AUGER
L1_M4O2_AUGER = _xraylib.L1_M4O2_AUGER
L1_M4O3_AUGER = _xraylib.L1_M4O3_AUGER
L1_M4O4_AUGER = _xraylib.L1_M4O4_AUGER
L1_M4O5_AUGER = _xraylib.L1_M4O5_AUGER
L1_M4O6_AUGER = _xraylib.L1_M4O6_AUGER
L1_M4O7_AUGER = _xraylib.L1_M4O7_AUGER
L1_M4P1_AUGER = _xraylib.L1_M4P1_AUGER
L1_M4P2_AUGER = _xraylib.L1_M4P2_AUGER
L1_M4P3_AUGER = _xraylib.L1_M4P3_AUGER
L1_M4P4_AUGER = _xraylib.L1_M4P4_AUGER
L1_M4P5_AUGER = _xraylib.L1_M4P5_AUGER
L1_M4Q1_AUGER = _xraylib.L1_M4Q1_AUGER
L1_M4Q2_AUGER = _xraylib.L1_M4Q2_AUGER
L1_M4Q3_AUGER = _xraylib.L1_M4Q3_AUGER
L1_M5L2_AUGER = _xraylib.L1_M5L2_AUGER
L1_M5L3_AUGER = _xraylib.L1_M5L3_AUGER
L1_M5M1_AUGER = _xraylib.L1_M5M1_AUGER
L1_M5M2_AUGER = _xraylib.L1_M5M2_AUGER
L1_M5M3_AUGER = _xraylib.L1_M5M3_AUGER
L1_M5M4_AUGER = _xraylib.L1_M5M4_AUGER
L1_M5M5_AUGER = _xraylib.L1_M5M5_AUGER
L1_M5N1_AUGER = _xraylib.L1_M5N1_AUGER
L1_M5N2_AUGER = _xraylib.L1_M5N2_AUGER
L1_M5N3_AUGER = _xraylib.L1_M5N3_AUGER
L1_M5N4_AUGER = _xraylib.L1_M5N4_AUGER
L1_M5N5_AUGER = _xraylib.L1_M5N5_AUGER
L1_M5N6_AUGER = _xraylib.L1_M5N6_AUGER
L1_M5N7_AUGER = _xraylib.L1_M5N7_AUGER
L1_M5O1_AUGER = _xraylib.L1_M5O1_AUGER
L1_M5O2_AUGER = _xraylib.L1_M5O2_AUGER
L1_M5O3_AUGER = _xraylib.L1_M5O3_AUGER
L1_M5O4_AUGER = _xraylib.L1_M5O4_AUGER
L1_M5O5_AUGER = _xraylib.L1_M5O5_AUGER
L1_M5O6_AUGER = _xraylib.L1_M5O6_AUGER
L1_M5O7_AUGER = _xraylib.L1_M5O7_AUGER
L1_M5P1_AUGER = _xraylib.L1_M5P1_AUGER
L1_M5P2_AUGER = _xraylib.L1_M5P2_AUGER
L1_M5P3_AUGER = _xraylib.L1_M5P3_AUGER
L1_M5P4_AUGER = _xraylib.L1_M5P4_AUGER
L1_M5P5_AUGER = _xraylib.L1_M5P5_AUGER
L1_M5Q1_AUGER = _xraylib.L1_M5Q1_AUGER
L1_M5Q2_AUGER = _xraylib.L1_M5Q2_AUGER
L1_M5Q3_AUGER = _xraylib.L1_M5Q3_AUGER
L2_L3L3_AUGER = _xraylib.L2_L3L3_AUGER
L2_L3M1_AUGER = _xraylib.L2_L3M1_AUGER
L2_L3M2_AUGER = _xraylib.L2_L3M2_AUGER
L2_L3M3_AUGER = _xraylib.L2_L3M3_AUGER
L2_L3M4_AUGER = _xraylib.L2_L3M4_AUGER
L2_L3M5_AUGER = _xraylib.L2_L3M5_AUGER
L2_L3N1_AUGER = _xraylib.L2_L3N1_AUGER
L2_L3N2_AUGER = _xraylib.L2_L3N2_AUGER
L2_L3N3_AUGER = _xraylib.L2_L3N3_AUGER
L2_L3N4_AUGER = _xraylib.L2_L3N4_AUGER
L2_L3N5_AUGER = _xraylib.L2_L3N5_AUGER
L2_L3N6_AUGER = _xraylib.L2_L3N6_AUGER
L2_L3N7_AUGER = _xraylib.L2_L3N7_AUGER
L2_L3O1_AUGER = _xraylib.L2_L3O1_AUGER
L2_L3O2_AUGER = _xraylib.L2_L3O2_AUGER
L2_L3O3_AUGER = _xraylib.L2_L3O3_AUGER
L2_L3O4_AUGER = _xraylib.L2_L3O4_AUGER
L2_L3O5_AUGER = _xraylib.L2_L3O5_AUGER
L2_L3O6_AUGER = _xraylib.L2_L3O6_AUGER
L2_L3O7_AUGER = _xraylib.L2_L3O7_AUGER
L2_L3P1_AUGER = _xraylib.L2_L3P1_AUGER
L2_L3P2_AUGER = _xraylib.L2_L3P2_AUGER
L2_L3P3_AUGER = _xraylib.L2_L3P3_AUGER
L2_L3P4_AUGER = _xraylib.L2_L3P4_AUGER
L2_L3P5_AUGER = _xraylib.L2_L3P5_AUGER
L2_L3Q1_AUGER = _xraylib.L2_L3Q1_AUGER
L2_L3Q2_AUGER = _xraylib.L2_L3Q2_AUGER
L2_L3Q3_AUGER = _xraylib.L2_L3Q3_AUGER
L2_M1L3_AUGER = _xraylib.L2_M1L3_AUGER
L2_M1M1_AUGER = _xraylib.L2_M1M1_AUGER
L2_M1M2_AUGER = _xraylib.L2_M1M2_AUGER
L2_M1M3_AUGER = _xraylib.L2_M1M3_AUGER
L2_M1M4_AUGER = _xraylib.L2_M1M4_AUGER
L2_M1M5_AUGER = _xraylib.L2_M1M5_AUGER
L2_M1N1_AUGER = _xraylib.L2_M1N1_AUGER
L2_M1N2_AUGER = _xraylib.L2_M1N2_AUGER
L2_M1N3_AUGER = _xraylib.L2_M1N3_AUGER
L2_M1N4_AUGER = _xraylib.L2_M1N4_AUGER
L2_M1N5_AUGER = _xraylib.L2_M1N5_AUGER
L2_M1N6_AUGER = _xraylib.L2_M1N6_AUGER
L2_M1N7_AUGER = _xraylib.L2_M1N7_AUGER
L2_M1O1_AUGER = _xraylib.L2_M1O1_AUGER
L2_M1O2_AUGER = _xraylib.L2_M1O2_AUGER
L2_M1O3_AUGER = _xraylib.L2_M1O3_AUGER
L2_M1O4_AUGER = _xraylib.L2_M1O4_AUGER
L2_M1O5_AUGER = _xraylib.L2_M1O5_AUGER
L2_M1O6_AUGER = _xraylib.L2_M1O6_AUGER
L2_M1O7_AUGER = _xraylib.L2_M1O7_AUGER
L2_M1P1_AUGER = _xraylib.L2_M1P1_AUGER
L2_M1P2_AUGER = _xraylib.L2_M1P2_AUGER
L2_M1P3_AUGER = _xraylib.L2_M1P3_AUGER
L2_M1P4_AUGER = _xraylib.L2_M1P4_AUGER
L2_M1P5_AUGER = _xraylib.L2_M1P5_AUGER
L2_M1Q1_AUGER = _xraylib.L2_M1Q1_AUGER
L2_M1Q2_AUGER = _xraylib.L2_M1Q2_AUGER
L2_M1Q3_AUGER = _xraylib.L2_M1Q3_AUGER
L2_M2L3_AUGER = _xraylib.L2_M2L3_AUGER
L2_M2M1_AUGER = _xraylib.L2_M2M1_AUGER
L2_M2M2_AUGER = _xraylib.L2_M2M2_AUGER
L2_M2M3_AUGER = _xraylib.L2_M2M3_AUGER
L2_M2M4_AUGER = _xraylib.L2_M2M4_AUGER
L2_M2M5_AUGER = _xraylib.L2_M2M5_AUGER
L2_M2N1_AUGER = _xraylib.L2_M2N1_AUGER
L2_M2N2_AUGER = _xraylib.L2_M2N2_AUGER
L2_M2N3_AUGER = _xraylib.L2_M2N3_AUGER
L2_M2N4_AUGER = _xraylib.L2_M2N4_AUGER
L2_M2N5_AUGER = _xraylib.L2_M2N5_AUGER
L2_M2N6_AUGER = _xraylib.L2_M2N6_AUGER
L2_M2N7_AUGER = _xraylib.L2_M2N7_AUGER
L2_M2O1_AUGER = _xraylib.L2_M2O1_AUGER
L2_M2O2_AUGER = _xraylib.L2_M2O2_AUGER
L2_M2O3_AUGER = _xraylib.L2_M2O3_AUGER
L2_M2O4_AUGER = _xraylib.L2_M2O4_AUGER
L2_M2O5_AUGER = _xraylib.L2_M2O5_AUGER
L2_M2O6_AUGER = _xraylib.L2_M2O6_AUGER
L2_M2O7_AUGER = _xraylib.L2_M2O7_AUGER
L2_M2P1_AUGER = _xraylib.L2_M2P1_AUGER
L2_M2P2_AUGER = _xraylib.L2_M2P2_AUGER
L2_M2P3_AUGER = _xraylib.L2_M2P3_AUGER
L2_M2P4_AUGER = _xraylib.L2_M2P4_AUGER
L2_M2P5_AUGER = _xraylib.L2_M2P5_AUGER
L2_M2Q1_AUGER = _xraylib.L2_M2Q1_AUGER
L2_M2Q2_AUGER = _xraylib.L2_M2Q2_AUGER
L2_M2Q3_AUGER = _xraylib.L2_M2Q3_AUGER
L2_M3L3_AUGER = _xraylib.L2_M3L3_AUGER
L2_M3M1_AUGER = _xraylib.L2_M3M1_AUGER
L2_M3M2_AUGER = _xraylib.L2_M3M2_AUGER
L2_M3M3_AUGER = _xraylib.L2_M3M3_AUGER
L2_M3M4_AUGER = _xraylib.L2_M3M4_AUGER
L2_M3M5_AUGER = _xraylib.L2_M3M5_AUGER
L2_M3N1_AUGER = _xraylib.L2_M3N1_AUGER
L2_M3N2_AUGER = _xraylib.L2_M3N2_AUGER
L2_M3N3_AUGER = _xraylib.L2_M3N3_AUGER
L2_M3N4_AUGER = _xraylib.L2_M3N4_AUGER
L2_M3N5_AUGER = _xraylib.L2_M3N5_AUGER
L2_M3N6_AUGER = _xraylib.L2_M3N6_AUGER
L2_M3N7_AUGER = _xraylib.L2_M3N7_AUGER
L2_M3O1_AUGER = _xraylib.L2_M3O1_AUGER
L2_M3O2_AUGER = _xraylib.L2_M3O2_AUGER
L2_M3O3_AUGER = _xraylib.L2_M3O3_AUGER
L2_M3O4_AUGER = _xraylib.L2_M3O4_AUGER
L2_M3O5_AUGER = _xraylib.L2_M3O5_AUGER
L2_M3O6_AUGER = _xraylib.L2_M3O6_AUGER
L2_M3O7_AUGER = _xraylib.L2_M3O7_AUGER
L2_M3P1_AUGER = _xraylib.L2_M3P1_AUGER
L2_M3P2_AUGER = _xraylib.L2_M3P2_AUGER
L2_M3P3_AUGER = _xraylib.L2_M3P3_AUGER
L2_M3P4_AUGER = _xraylib.L2_M3P4_AUGER
L2_M3P5_AUGER = _xraylib.L2_M3P5_AUGER
L2_M3Q1_AUGER = _xraylib.L2_M3Q1_AUGER
L2_M3Q2_AUGER = _xraylib.L2_M3Q2_AUGER
L2_M3Q3_AUGER = _xraylib.L2_M3Q3_AUGER
L2_M4L3_AUGER = _xraylib.L2_M4L3_AUGER
L2_M4M1_AUGER = _xraylib.L2_M4M1_AUGER
L2_M4M2_AUGER = _xraylib.L2_M4M2_AUGER
L2_M4M3_AUGER = _xraylib.L2_M4M3_AUGER
L2_M4M4_AUGER = _xraylib.L2_M4M4_AUGER
L2_M4M5_AUGER = _xraylib.L2_M4M5_AUGER
L2_M4N1_AUGER = _xraylib.L2_M4N1_AUGER
L2_M4N2_AUGER = _xraylib.L2_M4N2_AUGER
L2_M4N3_AUGER = _xraylib.L2_M4N3_AUGER
L2_M4N4_AUGER = _xraylib.L2_M4N4_AUGER
L2_M4N5_AUGER = _xraylib.L2_M4N5_AUGER
L2_M4N6_AUGER = _xraylib.L2_M4N6_AUGER
L2_M4N7_AUGER = _xraylib.L2_M4N7_AUGER
L2_M4O1_AUGER = _xraylib.L2_M4O1_AUGER
L2_M4O2_AUGER = _xraylib.L2_M4O2_AUGER
L2_M4O3_AUGER = _xraylib.L2_M4O3_AUGER
L2_M4O4_AUGER = _xraylib.L2_M4O4_AUGER
L2_M4O5_AUGER = _xraylib.L2_M4O5_AUGER
L2_M4O6_AUGER = _xraylib.L2_M4O6_AUGER
L2_M4O7_AUGER = _xraylib.L2_M4O7_AUGER
L2_M4P1_AUGER = _xraylib.L2_M4P1_AUGER
L2_M4P2_AUGER = _xraylib.L2_M4P2_AUGER
L2_M4P3_AUGER = _xraylib.L2_M4P3_AUGER
L2_M4P4_AUGER = _xraylib.L2_M4P4_AUGER
L2_M4P5_AUGER = _xraylib.L2_M4P5_AUGER
L2_M4Q1_AUGER = _xraylib.L2_M4Q1_AUGER
L2_M4Q2_AUGER = _xraylib.L2_M4Q2_AUGER
L2_M4Q3_AUGER = _xraylib.L2_M4Q3_AUGER
L2_M5L3_AUGER = _xraylib.L2_M5L3_AUGER
L2_M5M1_AUGER = _xraylib.L2_M5M1_AUGER
L2_M5M2_AUGER = _xraylib.L2_M5M2_AUGER
L2_M5M3_AUGER = _xraylib.L2_M5M3_AUGER
L2_M5M4_AUGER = _xraylib.L2_M5M4_AUGER
L2_M5M5_AUGER = _xraylib.L2_M5M5_AUGER
L2_M5N1_AUGER = _xraylib.L2_M5N1_AUGER
L2_M5N2_AUGER = _xraylib.L2_M5N2_AUGER
L2_M5N3_AUGER = _xraylib.L2_M5N3_AUGER
L2_M5N4_AUGER = _xraylib.L2_M5N4_AUGER
L2_M5N5_AUGER = _xraylib.L2_M5N5_AUGER
L2_M5N6_AUGER = _xraylib.L2_M5N6_AUGER
L2_M5N7_AUGER = _xraylib.L2_M5N7_AUGER
L2_M5O1_AUGER = _xraylib.L2_M5O1_AUGER
L2_M5O2_AUGER = _xraylib.L2_M5O2_AUGER
L2_M5O3_AUGER = _xraylib.L2_M5O3_AUGER
L2_M5O4_AUGER = _xraylib.L2_M5O4_AUGER
L2_M5O5_AUGER = _xraylib.L2_M5O5_AUGER
L2_M5O6_AUGER = _xraylib.L2_M5O6_AUGER
L2_M5O7_AUGER = _xraylib.L2_M5O7_AUGER
L2_M5P1_AUGER = _xraylib.L2_M5P1_AUGER
L2_M5P2_AUGER = _xraylib.L2_M5P2_AUGER
L2_M5P3_AUGER = _xraylib.L2_M5P3_AUGER
L2_M5P4_AUGER = _xraylib.L2_M5P4_AUGER
L2_M5P5_AUGER = _xraylib.L2_M5P5_AUGER
L2_M5Q1_AUGER = _xraylib.L2_M5Q1_AUGER
L2_M5Q2_AUGER = _xraylib.L2_M5Q2_AUGER
L2_M5Q3_AUGER = _xraylib.L2_M5Q3_AUGER
L3_M1M1_AUGER = _xraylib.L3_M1M1_AUGER
L3_M1M2_AUGER = _xraylib.L3_M1M2_AUGER
L3_M1M3_AUGER = _xraylib.L3_M1M3_AUGER
L3_M1M4_AUGER = _xraylib.L3_M1M4_AUGER
L3_M1M5_AUGER = _xraylib.L3_M1M5_AUGER
L3_M1N1_AUGER = _xraylib.L3_M1N1_AUGER
L3_M1N2_AUGER = _xraylib.L3_M1N2_AUGER
L3_M1N3_AUGER = _xraylib.L3_M1N3_AUGER
L3_M1N4_AUGER = _xraylib.L3_M1N4_AUGER
L3_M1N5_AUGER = _xraylib.L3_M1N5_AUGER
L3_M1N6_AUGER = _xraylib.L3_M1N6_AUGER
L3_M1N7_AUGER = _xraylib.L3_M1N7_AUGER
L3_M1O1_AUGER = _xraylib.L3_M1O1_AUGER
L3_M1O2_AUGER = _xraylib.L3_M1O2_AUGER
L3_M1O3_AUGER = _xraylib.L3_M1O3_AUGER
L3_M1O4_AUGER = _xraylib.L3_M1O4_AUGER
L3_M1O5_AUGER = _xraylib.L3_M1O5_AUGER
L3_M1O6_AUGER = _xraylib.L3_M1O6_AUGER
L3_M1O7_AUGER = _xraylib.L3_M1O7_AUGER
L3_M1P1_AUGER = _xraylib.L3_M1P1_AUGER
L3_M1P2_AUGER = _xraylib.L3_M1P2_AUGER
L3_M1P3_AUGER = _xraylib.L3_M1P3_AUGER
L3_M1P4_AUGER = _xraylib.L3_M1P4_AUGER
L3_M1P5_AUGER = _xraylib.L3_M1P5_AUGER
L3_M1Q1_AUGER = _xraylib.L3_M1Q1_AUGER
L3_M1Q2_AUGER = _xraylib.L3_M1Q2_AUGER
L3_M1Q3_AUGER = _xraylib.L3_M1Q3_AUGER
L3_M2M1_AUGER = _xraylib.L3_M2M1_AUGER
L3_M2M2_AUGER = _xraylib.L3_M2M2_AUGER
L3_M2M3_AUGER = _xraylib.L3_M2M3_AUGER
L3_M2M4_AUGER = _xraylib.L3_M2M4_AUGER
L3_M2M5_AUGER = _xraylib.L3_M2M5_AUGER
L3_M2N1_AUGER = _xraylib.L3_M2N1_AUGER
L3_M2N2_AUGER = _xraylib.L3_M2N2_AUGER
L3_M2N3_AUGER = _xraylib.L3_M2N3_AUGER
L3_M2N4_AUGER = _xraylib.L3_M2N4_AUGER
L3_M2N5_AUGER = _xraylib.L3_M2N5_AUGER
L3_M2N6_AUGER = _xraylib.L3_M2N6_AUGER
L3_M2N7_AUGER = _xraylib.L3_M2N7_AUGER
L3_M2O1_AUGER = _xraylib.L3_M2O1_AUGER
L3_M2O2_AUGER = _xraylib.L3_M2O2_AUGER
L3_M2O3_AUGER = _xraylib.L3_M2O3_AUGER
L3_M2O4_AUGER = _xraylib.L3_M2O4_AUGER
L3_M2O5_AUGER = _xraylib.L3_M2O5_AUGER
L3_M2O6_AUGER = _xraylib.L3_M2O6_AUGER
L3_M2O7_AUGER = _xraylib.L3_M2O7_AUGER
L3_M2P1_AUGER = _xraylib.L3_M2P1_AUGER
L3_M2P2_AUGER = _xraylib.L3_M2P2_AUGER
L3_M2P3_AUGER = _xraylib.L3_M2P3_AUGER
L3_M2P4_AUGER = _xraylib.L3_M2P4_AUGER
L3_M2P5_AUGER = _xraylib.L3_M2P5_AUGER
L3_M2Q1_AUGER = _xraylib.L3_M2Q1_AUGER
L3_M2Q2_AUGER = _xraylib.L3_M2Q2_AUGER
L3_M2Q3_AUGER = _xraylib.L3_M2Q3_AUGER
L3_M3M1_AUGER = _xraylib.L3_M3M1_AUGER
L3_M3M2_AUGER = _xraylib.L3_M3M2_AUGER
L3_M3M3_AUGER = _xraylib.L3_M3M3_AUGER
L3_M3M4_AUGER = _xraylib.L3_M3M4_AUGER
L3_M3M5_AUGER = _xraylib.L3_M3M5_AUGER
L3_M3N1_AUGER = _xraylib.L3_M3N1_AUGER
L3_M3N2_AUGER = _xraylib.L3_M3N2_AUGER
L3_M3N3_AUGER = _xraylib.L3_M3N3_AUGER
L3_M3N4_AUGER = _xraylib.L3_M3N4_AUGER
L3_M3N5_AUGER = _xraylib.L3_M3N5_AUGER
L3_M3N6_AUGER = _xraylib.L3_M3N6_AUGER
L3_M3N7_AUGER = _xraylib.L3_M3N7_AUGER
L3_M3O1_AUGER = _xraylib.L3_M3O1_AUGER
L3_M3O2_AUGER = _xraylib.L3_M3O2_AUGER
L3_M3O3_AUGER = _xraylib.L3_M3O3_AUGER
L3_M3O4_AUGER = _xraylib.L3_M3O4_AUGER
L3_M3O5_AUGER = _xraylib.L3_M3O5_AUGER
L3_M3O6_AUGER = _xraylib.L3_M3O6_AUGER
L3_M3O7_AUGER = _xraylib.L3_M3O7_AUGER
L3_M3P1_AUGER = _xraylib.L3_M3P1_AUGER
L3_M3P2_AUGER = _xraylib.L3_M3P2_AUGER
L3_M3P3_AUGER = _xraylib.L3_M3P3_AUGER
L3_M3P4_AUGER = _xraylib.L3_M3P4_AUGER
L3_M3P5_AUGER = _xraylib.L3_M3P5_AUGER
L3_M3Q1_AUGER = _xraylib.L3_M3Q1_AUGER
L3_M3Q2_AUGER = _xraylib.L3_M3Q2_AUGER
L3_M3Q3_AUGER = _xraylib.L3_M3Q3_AUGER
L3_M4M1_AUGER = _xraylib.L3_M4M1_AUGER
L3_M4M2_AUGER = _xraylib.L3_M4M2_AUGER
L3_M4M3_AUGER = _xraylib.L3_M4M3_AUGER
L3_M4M4_AUGER = _xraylib.L3_M4M4_AUGER
L3_M4M5_AUGER = _xraylib.L3_M4M5_AUGER
L3_M4N1_AUGER = _xraylib.L3_M4N1_AUGER
L3_M4N2_AUGER = _xraylib.L3_M4N2_AUGER
L3_M4N3_AUGER = _xraylib.L3_M4N3_AUGER
L3_M4N4_AUGER = _xraylib.L3_M4N4_AUGER
L3_M4N5_AUGER = _xraylib.L3_M4N5_AUGER
L3_M4N6_AUGER = _xraylib.L3_M4N6_AUGER
L3_M4N7_AUGER = _xraylib.L3_M4N7_AUGER
L3_M4O1_AUGER = _xraylib.L3_M4O1_AUGER
L3_M4O2_AUGER = _xraylib.L3_M4O2_AUGER
L3_M4O3_AUGER = _xraylib.L3_M4O3_AUGER
L3_M4O4_AUGER = _xraylib.L3_M4O4_AUGER
L3_M4O5_AUGER = _xraylib.L3_M4O5_AUGER
L3_M4O6_AUGER = _xraylib.L3_M4O6_AUGER
L3_M4O7_AUGER = _xraylib.L3_M4O7_AUGER
L3_M4P1_AUGER = _xraylib.L3_M4P1_AUGER
L3_M4P2_AUGER = _xraylib.L3_M4P2_AUGER
L3_M4P3_AUGER = _xraylib.L3_M4P3_AUGER
L3_M4P4_AUGER = _xraylib.L3_M4P4_AUGER
L3_M4P5_AUGER = _xraylib.L3_M4P5_AUGER
L3_M4Q1_AUGER = _xraylib.L3_M4Q1_AUGER
L3_M4Q2_AUGER = _xraylib.L3_M4Q2_AUGER
L3_M4Q3_AUGER = _xraylib.L3_M4Q3_AUGER
L3_M5M1_AUGER = _xraylib.L3_M5M1_AUGER
L3_M5M2_AUGER = _xraylib.L3_M5M2_AUGER
L3_M5M3_AUGER = _xraylib.L3_M5M3_AUGER
L3_M5M4_AUGER = _xraylib.L3_M5M4_AUGER
L3_M5M5_AUGER = _xraylib.L3_M5M5_AUGER
L3_M5N1_AUGER = _xraylib.L3_M5N1_AUGER
L3_M5N2_AUGER = _xraylib.L3_M5N2_AUGER
L3_M5N3_AUGER = _xraylib.L3_M5N3_AUGER
L3_M5N4_AUGER = _xraylib.L3_M5N4_AUGER
L3_M5N5_AUGER = _xraylib.L3_M5N5_AUGER
L3_M5N6_AUGER = _xraylib.L3_M5N6_AUGER
L3_M5N7_AUGER = _xraylib.L3_M5N7_AUGER
L3_M5O1_AUGER = _xraylib.L3_M5O1_AUGER
L3_M5O2_AUGER = _xraylib.L3_M5O2_AUGER
L3_M5O3_AUGER = _xraylib.L3_M5O3_AUGER
L3_M5O4_AUGER = _xraylib.L3_M5O4_AUGER
L3_M5O5_AUGER = _xraylib.L3_M5O5_AUGER
L3_M5O6_AUGER = _xraylib.L3_M5O6_AUGER
L3_M5O7_AUGER = _xraylib.L3_M5O7_AUGER
L3_M5P1_AUGER = _xraylib.L3_M5P1_AUGER
L3_M5P2_AUGER = _xraylib.L3_M5P2_AUGER
L3_M5P3_AUGER = _xraylib.L3_M5P3_AUGER
L3_M5P4_AUGER = _xraylib.L3_M5P4_AUGER
L3_M5P5_AUGER = _xraylib.L3_M5P5_AUGER
L3_M5Q1_AUGER = _xraylib.L3_M5Q1_AUGER
L3_M5Q2_AUGER = _xraylib.L3_M5Q2_AUGER
L3_M5Q3_AUGER = _xraylib.L3_M5Q3_AUGER
M1_M2M2_AUGER = _xraylib.M1_M2M2_AUGER
M1_M2M3_AUGER = _xraylib.M1_M2M3_AUGER
M1_M2M4_AUGER = _xraylib.M1_M2M4_AUGER
M1_M2M5_AUGER = _xraylib.M1_M2M5_AUGER
M1_M2N1_AUGER = _xraylib.M1_M2N1_AUGER
M1_M2N2_AUGER = _xraylib.M1_M2N2_AUGER
M1_M2N3_AUGER = _xraylib.M1_M2N3_AUGER
M1_M2N4_AUGER = _xraylib.M1_M2N4_AUGER
M1_M2N5_AUGER = _xraylib.M1_M2N5_AUGER
M1_M2N6_AUGER = _xraylib.M1_M2N6_AUGER
M1_M2N7_AUGER = _xraylib.M1_M2N7_AUGER
M1_M2O1_AUGER = _xraylib.M1_M2O1_AUGER
M1_M2O2_AUGER = _xraylib.M1_M2O2_AUGER
M1_M2O3_AUGER = _xraylib.M1_M2O3_AUGER
M1_M2O4_AUGER = _xraylib.M1_M2O4_AUGER
M1_M2O5_AUGER = _xraylib.M1_M2O5_AUGER
M1_M2O6_AUGER = _xraylib.M1_M2O6_AUGER
M1_M2O7_AUGER = _xraylib.M1_M2O7_AUGER
M1_M2P1_AUGER = _xraylib.M1_M2P1_AUGER
M1_M2P2_AUGER = _xraylib.M1_M2P2_AUGER
M1_M2P3_AUGER = _xraylib.M1_M2P3_AUGER
M1_M2P4_AUGER = _xraylib.M1_M2P4_AUGER
M1_M2P5_AUGER = _xraylib.M1_M2P5_AUGER
M1_M2Q1_AUGER = _xraylib.M1_M2Q1_AUGER
M1_M2Q2_AUGER = _xraylib.M1_M2Q2_AUGER
M1_M2Q3_AUGER = _xraylib.M1_M2Q3_AUGER
M1_M3M2_AUGER = _xraylib.M1_M3M2_AUGER
M1_M3M3_AUGER = _xraylib.M1_M3M3_AUGER
M1_M3M4_AUGER = _xraylib.M1_M3M4_AUGER
M1_M3M5_AUGER = _xraylib.M1_M3M5_AUGER
M1_M3N1_AUGER = _xraylib.M1_M3N1_AUGER
M1_M3N2_AUGER = _xraylib.M1_M3N2_AUGER
M1_M3N3_AUGER = _xraylib.M1_M3N3_AUGER
M1_M3N4_AUGER = _xraylib.M1_M3N4_AUGER
M1_M3N5_AUGER = _xraylib.M1_M3N5_AUGER
M1_M3N6_AUGER = _xraylib.M1_M3N6_AUGER
M1_M3N7_AUGER = _xraylib.M1_M3N7_AUGER
M1_M3O1_AUGER = _xraylib.M1_M3O1_AUGER
M1_M3O2_AUGER = _xraylib.M1_M3O2_AUGER
M1_M3O3_AUGER = _xraylib.M1_M3O3_AUGER
M1_M3O4_AUGER = _xraylib.M1_M3O4_AUGER
M1_M3O5_AUGER = _xraylib.M1_M3O5_AUGER
M1_M3O6_AUGER = _xraylib.M1_M3O6_AUGER
M1_M3O7_AUGER = _xraylib.M1_M3O7_AUGER
M1_M3P1_AUGER = _xraylib.M1_M3P1_AUGER
M1_M3P2_AUGER = _xraylib.M1_M3P2_AUGER
M1_M3P3_AUGER = _xraylib.M1_M3P3_AUGER
M1_M3P4_AUGER = _xraylib.M1_M3P4_AUGER
M1_M3P5_AUGER = _xraylib.M1_M3P5_AUGER
M1_M3Q1_AUGER = _xraylib.M1_M3Q1_AUGER
M1_M3Q2_AUGER = _xraylib.M1_M3Q2_AUGER
M1_M3Q3_AUGER = _xraylib.M1_M3Q3_AUGER
M1_M4M2_AUGER = _xraylib.M1_M4M2_AUGER
M1_M4M3_AUGER = _xraylib.M1_M4M3_AUGER
M1_M4M4_AUGER = _xraylib.M1_M4M4_AUGER
M1_M4M5_AUGER = _xraylib.M1_M4M5_AUGER
M1_M4N1_AUGER = _xraylib.M1_M4N1_AUGER
M1_M4N2_AUGER = _xraylib.M1_M4N2_AUGER
M1_M4N3_AUGER = _xraylib.M1_M4N3_AUGER
M1_M4N4_AUGER = _xraylib.M1_M4N4_AUGER
M1_M4N5_AUGER = _xraylib.M1_M4N5_AUGER
M1_M4N6_AUGER = _xraylib.M1_M4N6_AUGER
M1_M4N7_AUGER = _xraylib.M1_M4N7_AUGER
M1_M4O1_AUGER = _xraylib.M1_M4O1_AUGER
M1_M4O2_AUGER = _xraylib.M1_M4O2_AUGER
M1_M4O3_AUGER = _xraylib.M1_M4O3_AUGER
M1_M4O4_AUGER = _xraylib.M1_M4O4_AUGER
M1_M4O5_AUGER = _xraylib.M1_M4O5_AUGER
M1_M4O6_AUGER = _xraylib.M1_M4O6_AUGER
M1_M4O7_AUGER = _xraylib.M1_M4O7_AUGER
M1_M4P1_AUGER = _xraylib.M1_M4P1_AUGER
M1_M4P2_AUGER = _xraylib.M1_M4P2_AUGER
M1_M4P3_AUGER = _xraylib.M1_M4P3_AUGER
M1_M4P4_AUGER = _xraylib.M1_M4P4_AUGER
M1_M4P5_AUGER = _xraylib.M1_M4P5_AUGER
M1_M4Q1_AUGER = _xraylib.M1_M4Q1_AUGER
M1_M4Q2_AUGER = _xraylib.M1_M4Q2_AUGER
M1_M4Q3_AUGER = _xraylib.M1_M4Q3_AUGER
M1_M5M2_AUGER = _xraylib.M1_M5M2_AUGER
M1_M5M3_AUGER = _xraylib.M1_M5M3_AUGER
M1_M5M4_AUGER = _xraylib.M1_M5M4_AUGER
M1_M5M5_AUGER = _xraylib.M1_M5M5_AUGER
M1_M5N1_AUGER = _xraylib.M1_M5N1_AUGER
M1_M5N2_AUGER = _xraylib.M1_M5N2_AUGER
M1_M5N3_AUGER = _xraylib.M1_M5N3_AUGER
M1_M5N4_AUGER = _xraylib.M1_M5N4_AUGER
M1_M5N5_AUGER = _xraylib.M1_M5N5_AUGER
M1_M5N6_AUGER = _xraylib.M1_M5N6_AUGER
M1_M5N7_AUGER = _xraylib.M1_M5N7_AUGER
M1_M5O1_AUGER = _xraylib.M1_M5O1_AUGER
M1_M5O2_AUGER = _xraylib.M1_M5O2_AUGER
M1_M5O3_AUGER = _xraylib.M1_M5O3_AUGER
M1_M5O4_AUGER = _xraylib.M1_M5O4_AUGER
M1_M5O5_AUGER = _xraylib.M1_M5O5_AUGER
M1_M5O6_AUGER = _xraylib.M1_M5O6_AUGER
M1_M5O7_AUGER = _xraylib.M1_M5O7_AUGER
M1_M5P1_AUGER = _xraylib.M1_M5P1_AUGER
M1_M5P2_AUGER = _xraylib.M1_M5P2_AUGER
M1_M5P3_AUGER = _xraylib.M1_M5P3_AUGER
M1_M5P4_AUGER = _xraylib.M1_M5P4_AUGER
M1_M5P5_AUGER = _xraylib.M1_M5P5_AUGER
M1_M5Q1_AUGER = _xraylib.M1_M5Q1_AUGER
M1_M5Q2_AUGER = _xraylib.M1_M5Q2_AUGER
M1_M5Q3_AUGER = _xraylib.M1_M5Q3_AUGER
M2_M3M3_AUGER = _xraylib.M2_M3M3_AUGER
M2_M3M4_AUGER = _xraylib.M2_M3M4_AUGER
M2_M3M5_AUGER = _xraylib.M2_M3M5_AUGER
M2_M3N1_AUGER = _xraylib.M2_M3N1_AUGER
M2_M3N2_AUGER = _xraylib.M2_M3N2_AUGER
M2_M3N3_AUGER = _xraylib.M2_M3N3_AUGER
M2_M3N4_AUGER = _xraylib.M2_M3N4_AUGER
M2_M3N5_AUGER = _xraylib.M2_M3N5_AUGER
M2_M3N6_AUGER = _xraylib.M2_M3N6_AUGER
M2_M3N7_AUGER = _xraylib.M2_M3N7_AUGER
M2_M3O1_AUGER = _xraylib.M2_M3O1_AUGER
M2_M3O2_AUGER = _xraylib.M2_M3O2_AUGER
M2_M3O3_AUGER = _xraylib.M2_M3O3_AUGER
M2_M3O4_AUGER = _xraylib.M2_M3O4_AUGER
M2_M3O5_AUGER = _xraylib.M2_M3O5_AUGER
M2_M3O6_AUGER = _xraylib.M2_M3O6_AUGER
M2_M3O7_AUGER = _xraylib.M2_M3O7_AUGER
M2_M3P1_AUGER = _xraylib.M2_M3P1_AUGER
M2_M3P2_AUGER = _xraylib.M2_M3P2_AUGER
M2_M3P3_AUGER = _xraylib.M2_M3P3_AUGER
M2_M3P4_AUGER = _xraylib.M2_M3P4_AUGER
M2_M3P5_AUGER = _xraylib.M2_M3P5_AUGER
M2_M3Q1_AUGER = _xraylib.M2_M3Q1_AUGER
M2_M3Q2_AUGER = _xraylib.M2_M3Q2_AUGER
M2_M3Q3_AUGER = _xraylib.M2_M3Q3_AUGER
M2_M4M3_AUGER = _xraylib.M2_M4M3_AUGER
M2_M4M4_AUGER = _xraylib.M2_M4M4_AUGER
M2_M4M5_AUGER = _xraylib.M2_M4M5_AUGER
M2_M4N1_AUGER = _xraylib.M2_M4N1_AUGER
M2_M4N2_AUGER = _xraylib.M2_M4N2_AUGER
M2_M4N3_AUGER = _xraylib.M2_M4N3_AUGER
M2_M4N4_AUGER = _xraylib.M2_M4N4_AUGER
M2_M4N5_AUGER = _xraylib.M2_M4N5_AUGER
M2_M4N6_AUGER = _xraylib.M2_M4N6_AUGER
M2_M4N7_AUGER = _xraylib.M2_M4N7_AUGER
M2_M4O1_AUGER = _xraylib.M2_M4O1_AUGER
M2_M4O2_AUGER = _xraylib.M2_M4O2_AUGER
M2_M4O3_AUGER = _xraylib.M2_M4O3_AUGER
M2_M4O4_AUGER = _xraylib.M2_M4O4_AUGER
M2_M4O5_AUGER = _xraylib.M2_M4O5_AUGER
M2_M4O6_AUGER = _xraylib.M2_M4O6_AUGER
M2_M4O7_AUGER = _xraylib.M2_M4O7_AUGER
M2_M4P1_AUGER = _xraylib.M2_M4P1_AUGER
M2_M4P2_AUGER = _xraylib.M2_M4P2_AUGER
M2_M4P3_AUGER = _xraylib.M2_M4P3_AUGER
M2_M4P4_AUGER = _xraylib.M2_M4P4_AUGER
M2_M4P5_AUGER = _xraylib.M2_M4P5_AUGER
M2_M4Q1_AUGER = _xraylib.M2_M4Q1_AUGER
M2_M4Q2_AUGER = _xraylib.M2_M4Q2_AUGER
M2_M4Q3_AUGER = _xraylib.M2_M4Q3_AUGER
M2_M5M3_AUGER = _xraylib.M2_M5M3_AUGER
M2_M5M4_AUGER = _xraylib.M2_M5M4_AUGER
M2_M5M5_AUGER = _xraylib.M2_M5M5_AUGER
M2_M5N1_AUGER = _xraylib.M2_M5N1_AUGER
M2_M5N2_AUGER = _xraylib.M2_M5N2_AUGER
M2_M5N3_AUGER = _xraylib.M2_M5N3_AUGER
M2_M5N4_AUGER = _xraylib.M2_M5N4_AUGER
M2_M5N5_AUGER = _xraylib.M2_M5N5_AUGER
M2_M5N6_AUGER = _xraylib.M2_M5N6_AUGER
M2_M5N7_AUGER = _xraylib.M2_M5N7_AUGER
M2_M5O1_AUGER = _xraylib.M2_M5O1_AUGER
M2_M5O2_AUGER = _xraylib.M2_M5O2_AUGER
M2_M5O3_AUGER = _xraylib.M2_M5O3_AUGER
M2_M5O4_AUGER = _xraylib.M2_M5O4_AUGER
M2_M5O5_AUGER = _xraylib.M2_M5O5_AUGER
M2_M5O6_AUGER = _xraylib.M2_M5O6_AUGER
M2_M5O7_AUGER = _xraylib.M2_M5O7_AUGER
M2_M5P1_AUGER = _xraylib.M2_M5P1_AUGER
M2_M5P2_AUGER = _xraylib.M2_M5P2_AUGER
M2_M5P3_AUGER = _xraylib.M2_M5P3_AUGER
M2_M5P4_AUGER = _xraylib.M2_M5P4_AUGER
M2_M5P5_AUGER = _xraylib.M2_M5P5_AUGER
M2_M5Q1_AUGER = _xraylib.M2_M5Q1_AUGER
M2_M5Q2_AUGER = _xraylib.M2_M5Q2_AUGER
M2_M5Q3_AUGER = _xraylib.M2_M5Q3_AUGER
M3_M4M4_AUGER = _xraylib.M3_M4M4_AUGER
M3_M4M5_AUGER = _xraylib.M3_M4M5_AUGER
M3_M4N1_AUGER = _xraylib.M3_M4N1_AUGER
M3_M4N2_AUGER = _xraylib.M3_M4N2_AUGER
M3_M4N3_AUGER = _xraylib.M3_M4N3_AUGER
M3_M4N4_AUGER = _xraylib.M3_M4N4_AUGER
M3_M4N5_AUGER = _xraylib.M3_M4N5_AUGER
M3_M4N6_AUGER = _xraylib.M3_M4N6_AUGER
M3_M4N7_AUGER = _xraylib.M3_M4N7_AUGER
M3_M4O1_AUGER = _xraylib.M3_M4O1_AUGER
M3_M4O2_AUGER = _xraylib.M3_M4O2_AUGER
M3_M4O3_AUGER = _xraylib.M3_M4O3_AUGER
M3_M4O4_AUGER = _xraylib.M3_M4O4_AUGER
M3_M4O5_AUGER = _xraylib.M3_M4O5_AUGER
M3_M4O6_AUGER = _xraylib.M3_M4O6_AUGER
M3_M4O7_AUGER = _xraylib.M3_M4O7_AUGER
M3_M4P1_AUGER = _xraylib.M3_M4P1_AUGER
M3_M4P2_AUGER = _xraylib.M3_M4P2_AUGER
M3_M4P3_AUGER = _xraylib.M3_M4P3_AUGER
M3_M4P4_AUGER = _xraylib.M3_M4P4_AUGER
M3_M4P5_AUGER = _xraylib.M3_M4P5_AUGER
M3_M4Q1_AUGER = _xraylib.M3_M4Q1_AUGER
M3_M4Q2_AUGER = _xraylib.M3_M4Q2_AUGER
M3_M4Q3_AUGER = _xraylib.M3_M4Q3_AUGER
M3_M5M4_AUGER = _xraylib.M3_M5M4_AUGER
M3_M5M5_AUGER = _xraylib.M3_M5M5_AUGER
M3_M5N1_AUGER = _xraylib.M3_M5N1_AUGER
M3_M5N2_AUGER = _xraylib.M3_M5N2_AUGER
M3_M5N3_AUGER = _xraylib.M3_M5N3_AUGER
M3_M5N4_AUGER = _xraylib.M3_M5N4_AUGER
M3_M5N5_AUGER = _xraylib.M3_M5N5_AUGER
M3_M5N6_AUGER = _xraylib.M3_M5N6_AUGER
M3_M5N7_AUGER = _xraylib.M3_M5N7_AUGER
M3_M5O1_AUGER = _xraylib.M3_M5O1_AUGER
M3_M5O2_AUGER = _xraylib.M3_M5O2_AUGER
M3_M5O3_AUGER = _xraylib.M3_M5O3_AUGER
M3_M5O4_AUGER = _xraylib.M3_M5O4_AUGER
M3_M5O5_AUGER = _xraylib.M3_M5O5_AUGER
M3_M5O6_AUGER = _xraylib.M3_M5O6_AUGER
M3_M5O7_AUGER = _xraylib.M3_M5O7_AUGER
M3_M5P1_AUGER = _xraylib.M3_M5P1_AUGER
M3_M5P2_AUGER = _xraylib.M3_M5P2_AUGER
M3_M5P3_AUGER = _xraylib.M3_M5P3_AUGER
M3_M5P4_AUGER = _xraylib.M3_M5P4_AUGER
M3_M5P5_AUGER = _xraylib.M3_M5P5_AUGER
M3_M5Q1_AUGER = _xraylib.M3_M5Q1_AUGER
M3_M5Q2_AUGER = _xraylib.M3_M5Q2_AUGER
M3_M5Q3_AUGER = _xraylib.M3_M5Q3_AUGER
M4_M5M5_AUGER = _xraylib.M4_M5M5_AUGER
M4_M5N1_AUGER = _xraylib.M4_M5N1_AUGER
M4_M5N2_AUGER = _xraylib.M4_M5N2_AUGER
M4_M5N3_AUGER = _xraylib.M4_M5N3_AUGER
M4_M5N4_AUGER = _xraylib.M4_M5N4_AUGER
M4_M5N5_AUGER = _xraylib.M4_M5N5_AUGER
M4_M5N6_AUGER = _xraylib.M4_M5N6_AUGER
M4_M5N7_AUGER = _xraylib.M4_M5N7_AUGER
M4_M5O1_AUGER = _xraylib.M4_M5O1_AUGER
M4_M5O2_AUGER = _xraylib.M4_M5O2_AUGER
M4_M5O3_AUGER = _xraylib.M4_M5O3_AUGER
M4_M5O4_AUGER = _xraylib.M4_M5O4_AUGER
M4_M5O5_AUGER = _xraylib.M4_M5O5_AUGER
M4_M5O6_AUGER = _xraylib.M4_M5O6_AUGER
M4_M5O7_AUGER = _xraylib.M4_M5O7_AUGER
M4_M5P1_AUGER = _xraylib.M4_M5P1_AUGER
M4_M5P2_AUGER = _xraylib.M4_M5P2_AUGER
M4_M5P3_AUGER = _xraylib.M4_M5P3_AUGER
M4_M5P4_AUGER = _xraylib.M4_M5P4_AUGER
M4_M5P5_AUGER = _xraylib.M4_M5P5_AUGER
M4_M5Q1_AUGER = _xraylib.M4_M5Q1_AUGER
M4_M5Q2_AUGER = _xraylib.M4_M5Q2_AUGER
M4_M5Q3_AUGER = _xraylib.M4_M5Q3_AUGER
ZMAX = _xraylib.ZMAX
MENDEL_MAX = _xraylib.MENDEL_MAX
CRYSTALARRAY_MAX = _xraylib.CRYSTALARRAY_MAX
MAXFILENAMESIZE = _xraylib.MAXFILENAMESIZE
SHELLNUM = _xraylib.SHELLNUM
SHELLNUM_K = _xraylib.SHELLNUM_K
SHELLNUM_C = _xraylib.SHELLNUM_C
LINENUM = _xraylib.LINENUM
TRANSNUM = _xraylib.TRANSNUM
AUGERNUM = _xraylib.AUGERNUM
SHELLNUM_A = _xraylib.SHELLNUM_A
N_NEW_CRYSTAL = _xraylib.N_NEW_CRYSTAL
class Crystal_Atom(_object):
    """Proxy of C Crystal_Atom struct."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Crystal_Atom, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Crystal_Atom, name)
    __repr__ = _swig_repr
    __swig_setmethods__["Zatom"] = _xraylib.Crystal_Atom_Zatom_set
    __swig_getmethods__["Zatom"] = _xraylib.Crystal_Atom_Zatom_get
    if _newclass:
        Zatom = _swig_property(_xraylib.Crystal_Atom_Zatom_get, _xraylib.Crystal_Atom_Zatom_set)
    __swig_setmethods__["fraction"] = _xraylib.Crystal_Atom_fraction_set
    __swig_getmethods__["fraction"] = _xraylib.Crystal_Atom_fraction_get
    if _newclass:
        fraction = _swig_property(_xraylib.Crystal_Atom_fraction_get, _xraylib.Crystal_Atom_fraction_set)
    __swig_setmethods__["x"] = _xraylib.Crystal_Atom_x_set
    __swig_getmethods__["x"] = _xraylib.Crystal_Atom_x_get
    if _newclass:
        x = _swig_property(_xraylib.Crystal_Atom_x_get, _xraylib.Crystal_Atom_x_set)
    __swig_setmethods__["y"] = _xraylib.Crystal_Atom_y_set
    __swig_getmethods__["y"] = _xraylib.Crystal_Atom_y_get
    if _newclass:
        y = _swig_property(_xraylib.Crystal_Atom_y_get, _xraylib.Crystal_Atom_y_set)
    __swig_setmethods__["z"] = _xraylib.Crystal_Atom_z_set
    __swig_getmethods__["z"] = _xraylib.Crystal_Atom_z_get
    if _newclass:
        z = _swig_property(_xraylib.Crystal_Atom_z_get, _xraylib.Crystal_Atom_z_set)

    def __init__(self):
        """__init__(Crystal_Atom self) -> Crystal_Atom"""
        this = _xraylib.new_Crystal_Atom()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _xraylib.delete_Crystal_Atom
    __del__ = lambda self: None
Crystal_Atom_swigregister = _xraylib.Crystal_Atom_swigregister
Crystal_Atom_swigregister(Crystal_Atom)

class Crystal_Struct(_object):
    """Proxy of C Crystal_Struct struct."""

    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Crystal_Struct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Crystal_Struct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _xraylib.Crystal_Struct_name_set
    __swig_getmethods__["name"] = _xraylib.Crystal_Struct_name_get
    if _newclass:
        name = _swig_property(_xraylib.Crystal_Struct_name_get, _xraylib.Crystal_Struct_name_set)
    __swig_setmethods__["a"] = _xraylib.Crystal_Struct_a_set
    __swig_getmethods__["a"] = _xraylib.Crystal_Struct_a_get
    if _newclass:
        a = _swig_property(_xraylib.Crystal_Struct_a_get, _xraylib.Crystal_Struct_a_set)
    __swig_setmethods__["b"] = _xraylib.Crystal_Struct_b_set
    __swig_getmethods__["b"] = _xraylib.Crystal_Struct_b_get
    if _newclass:
        b = _swig_property(_xraylib.Crystal_Struct_b_get, _xraylib.Crystal_Struct_b_set)
    __swig_setmethods__["c"] = _xraylib.Crystal_Struct_c_set
    __swig_getmethods__["c"] = _xraylib.Crystal_Struct_c_get
    if _newclass:
        c = _swig_property(_xraylib.Crystal_Struct_c_get, _xraylib.Crystal_Struct_c_set)
    __swig_setmethods__["alpha"] = _xraylib.Crystal_Struct_alpha_set
    __swig_getmethods__["alpha"] = _xraylib.Crystal_Struct_alpha_get
    if _newclass:
        alpha = _swig_property(_xraylib.Crystal_Struct_alpha_get, _xraylib.Crystal_Struct_alpha_set)
    __swig_setmethods__["beta"] = _xraylib.Crystal_Struct_beta_set
    __swig_getmethods__["beta"] = _xraylib.Crystal_Struct_beta_get
    if _newclass:
        beta = _swig_property(_xraylib.Crystal_Struct_beta_get, _xraylib.Crystal_Struct_beta_set)
    __swig_setmethods__["gamma"] = _xraylib.Crystal_Struct_gamma_set
    __swig_getmethods__["gamma"] = _xraylib.Crystal_Struct_gamma_get
    if _newclass:
        gamma = _swig_property(_xraylib.Crystal_Struct_gamma_get, _xraylib.Crystal_Struct_gamma_set)
    __swig_setmethods__["volume"] = _xraylib.Crystal_Struct_volume_set
    __swig_getmethods__["volume"] = _xraylib.Crystal_Struct_volume_get
    if _newclass:
        volume = _swig_property(_xraylib.Crystal_Struct_volume_get, _xraylib.Crystal_Struct_volume_set)
    __swig_setmethods__["n_atom"] = _xraylib.Crystal_Struct_n_atom_set
    __swig_getmethods__["n_atom"] = _xraylib.Crystal_Struct_n_atom_get
    if _newclass:
        n_atom = _swig_property(_xraylib.Crystal_Struct_n_atom_get, _xraylib.Crystal_Struct_n_atom_set)
    __swig_setmethods__["atom"] = _xraylib.Crystal_Struct_atom_set
    __swig_getmethods__["atom"] = _xraylib.Crystal_Struct_atom_get
    if _newclass:
        atom = _swig_property(_xraylib.Crystal_Struct_atom_get, _xraylib.Crystal_Struct_atom_set)

    def __init__(self):
        """__init__(Crystal_Struct self) -> Crystal_Struct"""
        this = _xraylib.new_Crystal_Struct()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _xraylib.delete_Crystal_Struct
    __del__ = lambda self: None
Crystal_Struct_swigregister = _xraylib.Crystal_Struct_swigregister
Crystal_Struct_swigregister(Crystal_Struct)


def Crystal_ArrayInit(n_crystal_alloc):
    """
    Crystal_ArrayInit(int n_crystal_alloc)

    Parameters
    ----------
    n_crystal_alloc: int

    """
    return _xraylib.Crystal_ArrayInit(n_crystal_alloc)

def Crystal_ArrayFree():
    """Crystal_ArrayFree()"""
    return _xraylib.Crystal_ArrayFree()

def Crystal_MakeCopy(crystal):
    """
    Crystal_MakeCopy(Crystal_Struct crystal) -> Crystal_Struct

    Parameters
    ----------
    crystal: Crystal_Struct *

    """
    return _xraylib.Crystal_MakeCopy(crystal)

def Crystal_Free(crystal):
    """
    Crystal_Free(Crystal_Struct crystal)

    Parameters
    ----------
    crystal: Crystal_Struct *

    """
    return _xraylib.Crystal_Free(crystal)

def Crystal_GetCrystal(material):
    """
    Crystal_GetCrystal(char const * material) -> Crystal_Struct

    Parameters
    ----------
    material: char const *

    """
    return _xraylib.Crystal_GetCrystal(material)

def Bragg_angle(crystal, energy, i_miller, j_miller, k_miller):
    """
    Bragg_angle(Crystal_Struct crystal, double energy, int i_miller, int j_miller, int k_miller) -> double

    Parameters
    ----------
    crystal: Crystal_Struct *
    energy: double
    i_miller: int
    j_miller: int
    k_miller: int

    """
    return _xraylib.Bragg_angle(crystal, energy, i_miller, j_miller, k_miller)

def Q_scattering_amplitude(crystal, energy, i_miller, j_miller, k_miller, rel_angle):
    """
    Q_scattering_amplitude(Crystal_Struct crystal, double energy, int i_miller, int j_miller, int k_miller, double rel_angle) -> double

    Parameters
    ----------
    crystal: Crystal_Struct *
    energy: double
    i_miller: int
    j_miller: int
    k_miller: int
    rel_angle: double

    """
    return _xraylib.Q_scattering_amplitude(crystal, energy, i_miller, j_miller, k_miller, rel_angle)

def Atomic_Factors(Z, energy, q, debye_factor):
    """
    Atomic_Factors(int Z, double energy, double q, double debye_factor)

    Parameters
    ----------
    Z: int
    energy: double
    q: double
    debye_factor: double

    """
    return _xraylib.Atomic_Factors(Z, energy, q, debye_factor)

def Crystal_F_H_StructureFactor(crystal, energy, i_miller, j_miller, k_miller, debye_factor, rel_angle):
    """
    Crystal_F_H_StructureFactor(Crystal_Struct crystal, double energy, int i_miller, int j_miller, int k_miller, double debye_factor, double rel_angle) -> xrlComplex

    Parameters
    ----------
    crystal: Crystal_Struct *
    energy: double
    i_miller: int
    j_miller: int
    k_miller: int
    debye_factor: double
    rel_angle: double

    """
    return _xraylib.Crystal_F_H_StructureFactor(crystal, energy, i_miller, j_miller, k_miller, debye_factor, rel_angle)

def Crystal_F_H_StructureFactor_Partial(crystal, energy, i_miller, j_miller, k_miller, debye_factor, rel_angle, f0_flag, f_prime_flag, f_prime2_flag):
    """
    Crystal_F_H_StructureFactor_Partial(Crystal_Struct crystal, double energy, int i_miller, int j_miller, int k_miller, double debye_factor, double rel_angle, int f0_flag, int f_prime_flag, int f_prime2_flag) -> xrlComplex

    Parameters
    ----------
    crystal: Crystal_Struct *
    energy: double
    i_miller: int
    j_miller: int
    k_miller: int
    debye_factor: double
    rel_angle: double
    f0_flag: int
    f_prime_flag: int
    f_prime2_flag: int

    """
    return _xraylib.Crystal_F_H_StructureFactor_Partial(crystal, energy, i_miller, j_miller, k_miller, debye_factor, rel_angle, f0_flag, f_prime_flag, f_prime2_flag)

def Crystal_UnitCellVolume(crystal):
    """
    Crystal_UnitCellVolume(Crystal_Struct crystal) -> double

    Parameters
    ----------
    crystal: Crystal_Struct *

    """
    return _xraylib.Crystal_UnitCellVolume(crystal)

def Crystal_dSpacing(crystal, i_miller, j_miller, k_miller):
    """
    Crystal_dSpacing(Crystal_Struct crystal, int i_miller, int j_miller, int k_miller) -> double

    Parameters
    ----------
    crystal: Crystal_Struct *
    i_miller: int
    j_miller: int
    k_miller: int

    """
    return _xraylib.Crystal_dSpacing(crystal, i_miller, j_miller, k_miller)

def Crystal_GetCrystalsList():
    """Crystal_GetCrystalsList() -> char **"""
    return _xraylib.Crystal_GetCrystalsList()

def GetCompoundDataNISTByName(compoundString):
    """
    GetCompoundDataNISTByName(char const [] compoundString) -> struct compoundDataNIST *

    Parameters
    ----------
    compoundString: char const []

    """
    return _xraylib.GetCompoundDataNISTByName(compoundString)

def GetCompoundDataNISTByIndex(compoundIndex):
    """
    GetCompoundDataNISTByIndex(int compoundIndex) -> struct compoundDataNIST *

    Parameters
    ----------
    compoundIndex: int

    """
    return _xraylib.GetCompoundDataNISTByIndex(compoundIndex)

def GetCompoundDataNISTList():
    """GetCompoundDataNISTList() -> char **"""
    return _xraylib.GetCompoundDataNISTList()
NIST_COMPOUND_A_150_TISSUE_EQUIVALENT_PLASTIC = _xraylib.NIST_COMPOUND_A_150_TISSUE_EQUIVALENT_PLASTIC
NIST_COMPOUND_ACETONE = _xraylib.NIST_COMPOUND_ACETONE
NIST_COMPOUND_ACETYLENE = _xraylib.NIST_COMPOUND_ACETYLENE
NIST_COMPOUND_ADENINE = _xraylib.NIST_COMPOUND_ADENINE
NIST_COMPOUND_ADIPOSE_TISSUE_ICRP = _xraylib.NIST_COMPOUND_ADIPOSE_TISSUE_ICRP
NIST_COMPOUND_AIR_DRY_NEAR_SEA_LEVEL = _xraylib.NIST_COMPOUND_AIR_DRY_NEAR_SEA_LEVEL
NIST_COMPOUND_ALANINE = _xraylib.NIST_COMPOUND_ALANINE
NIST_COMPOUND_ALUMINUM_OXIDE = _xraylib.NIST_COMPOUND_ALUMINUM_OXIDE
NIST_COMPOUND_AMBER = _xraylib.NIST_COMPOUND_AMBER
NIST_COMPOUND_AMMONIA = _xraylib.NIST_COMPOUND_AMMONIA
NIST_COMPOUND_ANILINE = _xraylib.NIST_COMPOUND_ANILINE
NIST_COMPOUND_ANTHRACENE = _xraylib.NIST_COMPOUND_ANTHRACENE
NIST_COMPOUND_B_100_BONE_EQUIVALENT_PLASTIC = _xraylib.NIST_COMPOUND_B_100_BONE_EQUIVALENT_PLASTIC
NIST_COMPOUND_BAKELITE = _xraylib.NIST_COMPOUND_BAKELITE
NIST_COMPOUND_BARIUM_FLUORIDE = _xraylib.NIST_COMPOUND_BARIUM_FLUORIDE
NIST_COMPOUND_BARIUM_SULFATE = _xraylib.NIST_COMPOUND_BARIUM_SULFATE
NIST_COMPOUND_BENZENE = _xraylib.NIST_COMPOUND_BENZENE
NIST_COMPOUND_BERYLLIUM_OXIDE = _xraylib.NIST_COMPOUND_BERYLLIUM_OXIDE
NIST_COMPOUND_BISMUTH_GERMANIUM_OXIDE = _xraylib.NIST_COMPOUND_BISMUTH_GERMANIUM_OXIDE
NIST_COMPOUND_BLOOD_ICRP = _xraylib.NIST_COMPOUND_BLOOD_ICRP
NIST_COMPOUND_BONE_COMPACT_ICRU = _xraylib.NIST_COMPOUND_BONE_COMPACT_ICRU
NIST_COMPOUND_BONE_CORTICAL_ICRP = _xraylib.NIST_COMPOUND_BONE_CORTICAL_ICRP
NIST_COMPOUND_BORON_CARBIDE = _xraylib.NIST_COMPOUND_BORON_CARBIDE
NIST_COMPOUND_BORON_OXIDE = _xraylib.NIST_COMPOUND_BORON_OXIDE
NIST_COMPOUND_BRAIN_ICRP = _xraylib.NIST_COMPOUND_BRAIN_ICRP
NIST_COMPOUND_BUTANE = _xraylib.NIST_COMPOUND_BUTANE
NIST_COMPOUND_N_BUTYL_ALCOHOL = _xraylib.NIST_COMPOUND_N_BUTYL_ALCOHOL
NIST_COMPOUND_C_552_AIR_EQUIVALENT_PLASTIC = _xraylib.NIST_COMPOUND_C_552_AIR_EQUIVALENT_PLASTIC
NIST_COMPOUND_CADMIUM_TELLURIDE = _xraylib.NIST_COMPOUND_CADMIUM_TELLURIDE
NIST_COMPOUND_CADMIUM_TUNGSTATE = _xraylib.NIST_COMPOUND_CADMIUM_TUNGSTATE
NIST_COMPOUND_CALCIUM_CARBONATE = _xraylib.NIST_COMPOUND_CALCIUM_CARBONATE
NIST_COMPOUND_CALCIUM_FLUORIDE = _xraylib.NIST_COMPOUND_CALCIUM_FLUORIDE
NIST_COMPOUND_CALCIUM_OXIDE = _xraylib.NIST_COMPOUND_CALCIUM_OXIDE
NIST_COMPOUND_CALCIUM_SULFATE = _xraylib.NIST_COMPOUND_CALCIUM_SULFATE
NIST_COMPOUND_CALCIUM_TUNGSTATE = _xraylib.NIST_COMPOUND_CALCIUM_TUNGSTATE
NIST_COMPOUND_CARBON_DIOXIDE = _xraylib.NIST_COMPOUND_CARBON_DIOXIDE
NIST_COMPOUND_CARBON_TETRACHLORIDE = _xraylib.NIST_COMPOUND_CARBON_TETRACHLORIDE
NIST_COMPOUND_CELLULOSE_ACETATE_CELLOPHANE = _xraylib.NIST_COMPOUND_CELLULOSE_ACETATE_CELLOPHANE
NIST_COMPOUND_CELLULOSE_ACETATE_BUTYRATE = _xraylib.NIST_COMPOUND_CELLULOSE_ACETATE_BUTYRATE
NIST_COMPOUND_CELLULOSE_NITRATE = _xraylib.NIST_COMPOUND_CELLULOSE_NITRATE
NIST_COMPOUND_CERIC_SULFATE_DOSIMETER_SOLUTION = _xraylib.NIST_COMPOUND_CERIC_SULFATE_DOSIMETER_SOLUTION
NIST_COMPOUND_CESIUM_FLUORIDE = _xraylib.NIST_COMPOUND_CESIUM_FLUORIDE
NIST_COMPOUND_CESIUM_IODIDE = _xraylib.NIST_COMPOUND_CESIUM_IODIDE
NIST_COMPOUND_CHLOROBENZENE = _xraylib.NIST_COMPOUND_CHLOROBENZENE
NIST_COMPOUND_CHLOROFORM = _xraylib.NIST_COMPOUND_CHLOROFORM
NIST_COMPOUND_CONCRETE_PORTLAND = _xraylib.NIST_COMPOUND_CONCRETE_PORTLAND
NIST_COMPOUND_CYCLOHEXANE = _xraylib.NIST_COMPOUND_CYCLOHEXANE
NIST_COMPOUND_12_DDIHLOROBENZENE = _xraylib.NIST_COMPOUND_12_DDIHLOROBENZENE
NIST_COMPOUND_DICHLORODIETHYL_ETHER = _xraylib.NIST_COMPOUND_DICHLORODIETHYL_ETHER
NIST_COMPOUND_12_DICHLOROETHANE = _xraylib.NIST_COMPOUND_12_DICHLOROETHANE
NIST_COMPOUND_DIETHYL_ETHER = _xraylib.NIST_COMPOUND_DIETHYL_ETHER
NIST_COMPOUND_NN_DIMETHYL_FORMAMIDE = _xraylib.NIST_COMPOUND_NN_DIMETHYL_FORMAMIDE
NIST_COMPOUND_DIMETHYL_SULFOXIDE = _xraylib.NIST_COMPOUND_DIMETHYL_SULFOXIDE
NIST_COMPOUND_ETHANE = _xraylib.NIST_COMPOUND_ETHANE
NIST_COMPOUND_ETHYL_ALCOHOL = _xraylib.NIST_COMPOUND_ETHYL_ALCOHOL
NIST_COMPOUND_ETHYL_CELLULOSE = _xraylib.NIST_COMPOUND_ETHYL_CELLULOSE
NIST_COMPOUND_ETHYLENE = _xraylib.NIST_COMPOUND_ETHYLENE
NIST_COMPOUND_EYE_LENS_ICRP = _xraylib.NIST_COMPOUND_EYE_LENS_ICRP
NIST_COMPOUND_FERRIC_OXIDE = _xraylib.NIST_COMPOUND_FERRIC_OXIDE
NIST_COMPOUND_FERROBORIDE = _xraylib.NIST_COMPOUND_FERROBORIDE
NIST_COMPOUND_FERROUS_OXIDE = _xraylib.NIST_COMPOUND_FERROUS_OXIDE
NIST_COMPOUND_FERROUS_SULFATE_DOSIMETER_SOLUTION = _xraylib.NIST_COMPOUND_FERROUS_SULFATE_DOSIMETER_SOLUTION
NIST_COMPOUND_FREON_12 = _xraylib.NIST_COMPOUND_FREON_12
NIST_COMPOUND_FREON_12B2 = _xraylib.NIST_COMPOUND_FREON_12B2
NIST_COMPOUND_FREON_13 = _xraylib.NIST_COMPOUND_FREON_13
NIST_COMPOUND_FREON_13B1 = _xraylib.NIST_COMPOUND_FREON_13B1
NIST_COMPOUND_FREON_13I1 = _xraylib.NIST_COMPOUND_FREON_13I1
NIST_COMPOUND_GADOLINIUM_OXYSULFIDE = _xraylib.NIST_COMPOUND_GADOLINIUM_OXYSULFIDE
NIST_COMPOUND_GALLIUM_ARSENIDE = _xraylib.NIST_COMPOUND_GALLIUM_ARSENIDE
NIST_COMPOUND_GEL_IN_PHOTOGRAPHIC_EMULSION = _xraylib.NIST_COMPOUND_GEL_IN_PHOTOGRAPHIC_EMULSION
NIST_COMPOUND_GLASS_PYREX = _xraylib.NIST_COMPOUND_GLASS_PYREX
NIST_COMPOUND_GLASS_LEAD = _xraylib.NIST_COMPOUND_GLASS_LEAD
NIST_COMPOUND_GLASS_PLATE = _xraylib.NIST_COMPOUND_GLASS_PLATE
NIST_COMPOUND_GLUCOSE = _xraylib.NIST_COMPOUND_GLUCOSE
NIST_COMPOUND_GLUTAMINE = _xraylib.NIST_COMPOUND_GLUTAMINE
NIST_COMPOUND_GLYCEROL = _xraylib.NIST_COMPOUND_GLYCEROL
NIST_COMPOUND_GUANINE = _xraylib.NIST_COMPOUND_GUANINE
NIST_COMPOUND_GYPSUM_PLASTER_OF_PARIS = _xraylib.NIST_COMPOUND_GYPSUM_PLASTER_OF_PARIS
NIST_COMPOUND_N_HEPTANE = _xraylib.NIST_COMPOUND_N_HEPTANE
NIST_COMPOUND_N_HEXANE = _xraylib.NIST_COMPOUND_N_HEXANE
NIST_COMPOUND_KAPTON_POLYIMIDE_FILM = _xraylib.NIST_COMPOUND_KAPTON_POLYIMIDE_FILM
NIST_COMPOUND_LANTHANUM_OXYBROMIDE = _xraylib.NIST_COMPOUND_LANTHANUM_OXYBROMIDE
NIST_COMPOUND_LANTHANUM_OXYSULFIDE = _xraylib.NIST_COMPOUND_LANTHANUM_OXYSULFIDE
NIST_COMPOUND_LEAD_OXIDE = _xraylib.NIST_COMPOUND_LEAD_OXIDE
NIST_COMPOUND_LITHIUM_AMIDE = _xraylib.NIST_COMPOUND_LITHIUM_AMIDE
NIST_COMPOUND_LITHIUM_CARBONATE = _xraylib.NIST_COMPOUND_LITHIUM_CARBONATE
NIST_COMPOUND_LITHIUM_FLUORIDE = _xraylib.NIST_COMPOUND_LITHIUM_FLUORIDE
NIST_COMPOUND_LITHIUM_HYDRIDE = _xraylib.NIST_COMPOUND_LITHIUM_HYDRIDE
NIST_COMPOUND_LITHIUM_IODIDE = _xraylib.NIST_COMPOUND_LITHIUM_IODIDE
NIST_COMPOUND_LITHIUM_OXIDE = _xraylib.NIST_COMPOUND_LITHIUM_OXIDE
NIST_COMPOUND_LITHIUM_TETRABORATE = _xraylib.NIST_COMPOUND_LITHIUM_TETRABORATE
NIST_COMPOUND_LUNG_ICRP = _xraylib.NIST_COMPOUND_LUNG_ICRP
NIST_COMPOUND_M3_WAX = _xraylib.NIST_COMPOUND_M3_WAX
NIST_COMPOUND_MAGNESIUM_CARBONATE = _xraylib.NIST_COMPOUND_MAGNESIUM_CARBONATE
NIST_COMPOUND_MAGNESIUM_FLUORIDE = _xraylib.NIST_COMPOUND_MAGNESIUM_FLUORIDE
NIST_COMPOUND_MAGNESIUM_OXIDE = _xraylib.NIST_COMPOUND_MAGNESIUM_OXIDE
NIST_COMPOUND_MAGNESIUM_TETRABORATE = _xraylib.NIST_COMPOUND_MAGNESIUM_TETRABORATE
NIST_COMPOUND_MERCURIC_IODIDE = _xraylib.NIST_COMPOUND_MERCURIC_IODIDE
NIST_COMPOUND_METHANE = _xraylib.NIST_COMPOUND_METHANE
NIST_COMPOUND_METHANOL = _xraylib.NIST_COMPOUND_METHANOL
NIST_COMPOUND_MIX_D_WAX = _xraylib.NIST_COMPOUND_MIX_D_WAX
NIST_COMPOUND_MS20_TISSUE_SUBSTITUTE = _xraylib.NIST_COMPOUND_MS20_TISSUE_SUBSTITUTE
NIST_COMPOUND_MUSCLE_SKELETAL = _xraylib.NIST_COMPOUND_MUSCLE_SKELETAL
NIST_COMPOUND_MUSCLE_STRIATED = _xraylib.NIST_COMPOUND_MUSCLE_STRIATED
NIST_COMPOUND_MUSCLE_EQUIVALENT_LIQUID_WITH_SUCROSE = _xraylib.NIST_COMPOUND_MUSCLE_EQUIVALENT_LIQUID_WITH_SUCROSE
NIST_COMPOUND_MUSCLE_EQUIVALENT_LIQUID_WITHOUT_SUCROSE = _xraylib.NIST_COMPOUND_MUSCLE_EQUIVALENT_LIQUID_WITHOUT_SUCROSE
NIST_COMPOUND_NAPHTHALENE = _xraylib.NIST_COMPOUND_NAPHTHALENE
NIST_COMPOUND_NITROBENZENE = _xraylib.NIST_COMPOUND_NITROBENZENE
NIST_COMPOUND_NITROUS_OXIDE = _xraylib.NIST_COMPOUND_NITROUS_OXIDE
NIST_COMPOUND_NYLON_DU_PONT_ELVAMIDE_8062 = _xraylib.NIST_COMPOUND_NYLON_DU_PONT_ELVAMIDE_8062
NIST_COMPOUND_NYLON_TYPE_6_AND_TYPE_66 = _xraylib.NIST_COMPOUND_NYLON_TYPE_6_AND_TYPE_66
NIST_COMPOUND_NYLON_TYPE_610 = _xraylib.NIST_COMPOUND_NYLON_TYPE_610
NIST_COMPOUND_NYLON_TYPE_11_RILSAN = _xraylib.NIST_COMPOUND_NYLON_TYPE_11_RILSAN
NIST_COMPOUND_OCTANE_LIQUID = _xraylib.NIST_COMPOUND_OCTANE_LIQUID
NIST_COMPOUND_PARAFFIN_WAX = _xraylib.NIST_COMPOUND_PARAFFIN_WAX
NIST_COMPOUND_N_PENTANE = _xraylib.NIST_COMPOUND_N_PENTANE
NIST_COMPOUND_PHOTOGRAPHIC_EMULSION = _xraylib.NIST_COMPOUND_PHOTOGRAPHIC_EMULSION
NIST_COMPOUND_PLASTIC_SCINTILLATOR_VINYLTOLUENE_BASED = _xraylib.NIST_COMPOUND_PLASTIC_SCINTILLATOR_VINYLTOLUENE_BASED
NIST_COMPOUND_PLUTONIUM_DIOXIDE = _xraylib.NIST_COMPOUND_PLUTONIUM_DIOXIDE
NIST_COMPOUND_POLYACRYLONITRILE = _xraylib.NIST_COMPOUND_POLYACRYLONITRILE
NIST_COMPOUND_POLYCARBONATE_MAKROLON_LEXAN = _xraylib.NIST_COMPOUND_POLYCARBONATE_MAKROLON_LEXAN
NIST_COMPOUND_POLYCHLOROSTYRENE = _xraylib.NIST_COMPOUND_POLYCHLOROSTYRENE
NIST_COMPOUND_POLYETHYLENE = _xraylib.NIST_COMPOUND_POLYETHYLENE
NIST_COMPOUND_POLYETHYLENE_TEREPHTHALATE_MYLAR = _xraylib.NIST_COMPOUND_POLYETHYLENE_TEREPHTHALATE_MYLAR
NIST_COMPOUND_POLYMETHYL_METHACRALATE_LUCITE_PERSPEX = _xraylib.NIST_COMPOUND_POLYMETHYL_METHACRALATE_LUCITE_PERSPEX
NIST_COMPOUND_POLYOXYMETHYLENE = _xraylib.NIST_COMPOUND_POLYOXYMETHYLENE
NIST_COMPOUND_POLYPROPYLENE = _xraylib.NIST_COMPOUND_POLYPROPYLENE
NIST_COMPOUND_POLYSTYRENE = _xraylib.NIST_COMPOUND_POLYSTYRENE
NIST_COMPOUND_POLYTETRAFLUOROETHYLENE_TEFLON = _xraylib.NIST_COMPOUND_POLYTETRAFLUOROETHYLENE_TEFLON
NIST_COMPOUND_POLYTRIFLUOROCHLOROETHYLENE = _xraylib.NIST_COMPOUND_POLYTRIFLUOROCHLOROETHYLENE
NIST_COMPOUND_POLYVINYL_ACETATE = _xraylib.NIST_COMPOUND_POLYVINYL_ACETATE
NIST_COMPOUND_POLYVINYL_ALCOHOL = _xraylib.NIST_COMPOUND_POLYVINYL_ALCOHOL
NIST_COMPOUND_POLYVINYL_BUTYRAL = _xraylib.NIST_COMPOUND_POLYVINYL_BUTYRAL
NIST_COMPOUND_POLYVINYL_CHLORIDE = _xraylib.NIST_COMPOUND_POLYVINYL_CHLORIDE
NIST_COMPOUND_POLYVINYLIDENE_CHLORIDE_SARAN = _xraylib.NIST_COMPOUND_POLYVINYLIDENE_CHLORIDE_SARAN
NIST_COMPOUND_POLYVINYLIDENE_FLUORIDE = _xraylib.NIST_COMPOUND_POLYVINYLIDENE_FLUORIDE
NIST_COMPOUND_POLYVINYL_PYRROLIDONE = _xraylib.NIST_COMPOUND_POLYVINYL_PYRROLIDONE
NIST_COMPOUND_POTASSIUM_IODIDE = _xraylib.NIST_COMPOUND_POTASSIUM_IODIDE
NIST_COMPOUND_POTASSIUM_OXIDE = _xraylib.NIST_COMPOUND_POTASSIUM_OXIDE
NIST_COMPOUND_PROPANE = _xraylib.NIST_COMPOUND_PROPANE
NIST_COMPOUND_PROPANE_LIQUID = _xraylib.NIST_COMPOUND_PROPANE_LIQUID
NIST_COMPOUND_N_PROPYL_ALCOHOL = _xraylib.NIST_COMPOUND_N_PROPYL_ALCOHOL
NIST_COMPOUND_PYRIDINE = _xraylib.NIST_COMPOUND_PYRIDINE
NIST_COMPOUND_RUBBER_BUTYL = _xraylib.NIST_COMPOUND_RUBBER_BUTYL
NIST_COMPOUND_RUBBER_NATURAL = _xraylib.NIST_COMPOUND_RUBBER_NATURAL
NIST_COMPOUND_RUBBER_NEOPRENE = _xraylib.NIST_COMPOUND_RUBBER_NEOPRENE
NIST_COMPOUND_SILICON_DIOXIDE = _xraylib.NIST_COMPOUND_SILICON_DIOXIDE
NIST_COMPOUND_SILVER_BROMIDE = _xraylib.NIST_COMPOUND_SILVER_BROMIDE
NIST_COMPOUND_SILVER_CHLORIDE = _xraylib.NIST_COMPOUND_SILVER_CHLORIDE
NIST_COMPOUND_SILVER_HALIDES_IN_PHOTOGRAPHIC_EMULSION = _xraylib.NIST_COMPOUND_SILVER_HALIDES_IN_PHOTOGRAPHIC_EMULSION
NIST_COMPOUND_SILVER_IODIDE = _xraylib.NIST_COMPOUND_SILVER_IODIDE
NIST_COMPOUND_SKIN_ICRP = _xraylib.NIST_COMPOUND_SKIN_ICRP
NIST_COMPOUND_SODIUM_CARBONATE = _xraylib.NIST_COMPOUND_SODIUM_CARBONATE
NIST_COMPOUND_SODIUM_IODIDE = _xraylib.NIST_COMPOUND_SODIUM_IODIDE
NIST_COMPOUND_SODIUM_MONOXIDE = _xraylib.NIST_COMPOUND_SODIUM_MONOXIDE
NIST_COMPOUND_SODIUM_NITRATE = _xraylib.NIST_COMPOUND_SODIUM_NITRATE
NIST_COMPOUND_STILBENE = _xraylib.NIST_COMPOUND_STILBENE
NIST_COMPOUND_SUCROSE = _xraylib.NIST_COMPOUND_SUCROSE
NIST_COMPOUND_TERPHENYL = _xraylib.NIST_COMPOUND_TERPHENYL
NIST_COMPOUND_TESTES_ICRP = _xraylib.NIST_COMPOUND_TESTES_ICRP
NIST_COMPOUND_TETRACHLOROETHYLENE = _xraylib.NIST_COMPOUND_TETRACHLOROETHYLENE
NIST_COMPOUND_THALLIUM_CHLORIDE = _xraylib.NIST_COMPOUND_THALLIUM_CHLORIDE
NIST_COMPOUND_TISSUE_SOFT_ICRP = _xraylib.NIST_COMPOUND_TISSUE_SOFT_ICRP
NIST_COMPOUND_TISSUE_SOFT_ICRU_FOUR_COMPONENT = _xraylib.NIST_COMPOUND_TISSUE_SOFT_ICRU_FOUR_COMPONENT
NIST_COMPOUND_TISSUE_EQUIVALENT_GAS_METHANE_BASED = _xraylib.NIST_COMPOUND_TISSUE_EQUIVALENT_GAS_METHANE_BASED
NIST_COMPOUND_TISSUE_EQUIVALENT_GAS_PROPANE_BASED = _xraylib.NIST_COMPOUND_TISSUE_EQUIVALENT_GAS_PROPANE_BASED
NIST_COMPOUND_TITANIUM_DIOXIDE = _xraylib.NIST_COMPOUND_TITANIUM_DIOXIDE
NIST_COMPOUND_TOLUENE = _xraylib.NIST_COMPOUND_TOLUENE
NIST_COMPOUND_TRICHLOROETHYLENE = _xraylib.NIST_COMPOUND_TRICHLOROETHYLENE
NIST_COMPOUND_TRIETHYL_PHOSPHATE = _xraylib.NIST_COMPOUND_TRIETHYL_PHOSPHATE
NIST_COMPOUND_TUNGSTEN_HEXAFLUORIDE = _xraylib.NIST_COMPOUND_TUNGSTEN_HEXAFLUORIDE
NIST_COMPOUND_URANIUM_DICARBIDE = _xraylib.NIST_COMPOUND_URANIUM_DICARBIDE
NIST_COMPOUND_URANIUM_MONOCARBIDE = _xraylib.NIST_COMPOUND_URANIUM_MONOCARBIDE
NIST_COMPOUND_URANIUM_OXIDE = _xraylib.NIST_COMPOUND_URANIUM_OXIDE
NIST_COMPOUND_UREA = _xraylib.NIST_COMPOUND_UREA
NIST_COMPOUND_VALINE = _xraylib.NIST_COMPOUND_VALINE
NIST_COMPOUND_VITON_FLUOROELASTOMER = _xraylib.NIST_COMPOUND_VITON_FLUOROELASTOMER
NIST_COMPOUND_WATER_LIQUID = _xraylib.NIST_COMPOUND_WATER_LIQUID
NIST_COMPOUND_WATER_VAPOR = _xraylib.NIST_COMPOUND_WATER_VAPOR
NIST_COMPOUND_XYLENE = _xraylib.NIST_COMPOUND_XYLENE

def GetRadioNuclideDataByName(radioNuclideString):
    """
    GetRadioNuclideDataByName(char const [] radioNuclideString) -> struct radioNuclideData *

    Parameters
    ----------
    radioNuclideString: char const []

    """
    return _xraylib.GetRadioNuclideDataByName(radioNuclideString)

def GetRadioNuclideDataByIndex(radioNuclideIndex):
    """
    GetRadioNuclideDataByIndex(int radioNuclideIndex) -> struct radioNuclideData *

    Parameters
    ----------
    radioNuclideIndex: int

    """
    return _xraylib.GetRadioNuclideDataByIndex(radioNuclideIndex)

def GetRadioNuclideDataList():
    """GetRadioNuclideDataList() -> char **"""
    return _xraylib.GetRadioNuclideDataList()
RADIO_NUCLIDE_55FE = _xraylib.RADIO_NUCLIDE_55FE
RADIO_NUCLIDE_57CO = _xraylib.RADIO_NUCLIDE_57CO
RADIO_NUCLIDE_109CD = _xraylib.RADIO_NUCLIDE_109CD
RADIO_NUCLIDE_125I = _xraylib.RADIO_NUCLIDE_125I
RADIO_NUCLIDE_137CS = _xraylib.RADIO_NUCLIDE_137CS
RADIO_NUCLIDE_133BA = _xraylib.RADIO_NUCLIDE_133BA
RADIO_NUCLIDE_153GD = _xraylib.RADIO_NUCLIDE_153GD
RADIO_NUCLIDE_238PU = _xraylib.RADIO_NUCLIDE_238PU
RADIO_NUCLIDE_241AM = _xraylib.RADIO_NUCLIDE_241AM
RADIO_NUCLIDE_244CM = _xraylib.RADIO_NUCLIDE_244CM
KA_LINE = _xraylib.KA_LINE
KB_LINE = _xraylib.KB_LINE
LA_LINE = _xraylib.LA_LINE
LB_LINE = _xraylib.LB_LINE
KA1_LINE = _xraylib.KA1_LINE
KA2_LINE = _xraylib.KA2_LINE
KA3_LINE = _xraylib.KA3_LINE
KB1_LINE = _xraylib.KB1_LINE
KB2_LINE = _xraylib.KB2_LINE
KB3_LINE = _xraylib.KB3_LINE
KB4_LINE = _xraylib.KB4_LINE
KB5_LINE = _xraylib.KB5_LINE
LA1_LINE = _xraylib.LA1_LINE
LA2_LINE = _xraylib.LA2_LINE
LB1_LINE = _xraylib.LB1_LINE
LB2_LINE = _xraylib.LB2_LINE
LB3_LINE = _xraylib.LB3_LINE
LB4_LINE = _xraylib.LB4_LINE
LB5_LINE = _xraylib.LB5_LINE
LB6_LINE = _xraylib.LB6_LINE
LB7_LINE = _xraylib.LB7_LINE
LB9_LINE = _xraylib.LB9_LINE
LB10_LINE = _xraylib.LB10_LINE
LB15_LINE = _xraylib.LB15_LINE
LB17_LINE = _xraylib.LB17_LINE
LG1_LINE = _xraylib.LG1_LINE
LG2_LINE = _xraylib.LG2_LINE
LG3_LINE = _xraylib.LG3_LINE
LG4_LINE = _xraylib.LG4_LINE
LG5_LINE = _xraylib.LG5_LINE
LG6_LINE = _xraylib.LG6_LINE
LG8_LINE = _xraylib.LG8_LINE
LE_LINE = _xraylib.LE_LINE
LH_LINE = _xraylib.LH_LINE
LL_LINE = _xraylib.LL_LINE
LS_LINE = _xraylib.LS_LINE
LT_LINE = _xraylib.LT_LINE
LU_LINE = _xraylib.LU_LINE
LV_LINE = _xraylib.LV_LINE
MA1_LINE = _xraylib.MA1_LINE
MA2_LINE = _xraylib.MA2_LINE
MB_LINE = _xraylib.MB_LINE
MG_LINE = _xraylib.MG_LINE
F1_TRANS = _xraylib.F1_TRANS
F12_TRANS = _xraylib.F12_TRANS
F13_TRANS = _xraylib.F13_TRANS
FP13_TRANS = _xraylib.FP13_TRANS
F23_TRANS = _xraylib.F23_TRANS
FL12_TRANS = _xraylib.FL12_TRANS
FL13_TRANS = _xraylib.FL13_TRANS
FLP13_TRANS = _xraylib.FLP13_TRANS
FL23_TRANS = _xraylib.FL23_TRANS
FM12_TRANS = _xraylib.FM12_TRANS
FM13_TRANS = _xraylib.FM13_TRANS
FM14_TRANS = _xraylib.FM14_TRANS
FM15_TRANS = _xraylib.FM15_TRANS
FM23_TRANS = _xraylib.FM23_TRANS
FM24_TRANS = _xraylib.FM24_TRANS
FM25_TRANS = _xraylib.FM25_TRANS
FM34_TRANS = _xraylib.FM34_TRANS
FM35_TRANS = _xraylib.FM35_TRANS
FM45_TRANS = _xraylib.FM45_TRANS

def XRayInit():
    """XRayInit()"""
    return _xraylib.XRayInit()

def SetHardExit(hard_exit):
    """
    SetHardExit(int hard_exit)

    Parameters
    ----------
    hard_exit: int

    """
    return _xraylib.SetHardExit(hard_exit)

def SetExitStatus(exit_status):
    """
    SetExitStatus(int exit_status)

    Parameters
    ----------
    exit_status: int

    """
    return _xraylib.SetExitStatus(exit_status)

def GetExitStatus():
    """GetExitStatus() -> int"""
    return _xraylib.GetExitStatus()

def SetErrorMessages(status):
    """
    SetErrorMessages(int status)

    Parameters
    ----------
    status: int

    """
    return _xraylib.SetErrorMessages(status)

def GetErrorMessages():
    """GetErrorMessages() -> int"""
    return _xraylib.GetErrorMessages()

def AtomicWeight(Z):
    """
    AtomicWeight(int Z) -> double

    Parameters
    ----------
    Z: int

    """
    return _xraylib.AtomicWeight(Z)

def ElementDensity(Z):
    """
    ElementDensity(int Z) -> double

    Parameters
    ----------
    Z: int

    """
    return _xraylib.ElementDensity(Z)

def CS_Total(Z, E):
    """
    CS_Total(int Z, double E) -> double

    Parameters
    ----------
    Z: int
    E: double

    """
    return _xraylib.CS_Total(Z, E)

def CS_Photo(Z, E):
    """
    CS_Photo(int Z, double E) -> double

    Parameters
    ----------
    Z: int
    E: double

    """
    return _xraylib.CS_Photo(Z, E)

def CS_Rayl(Z, E):
    """
    CS_Rayl(int Z, double E) -> double

    Parameters
    ----------
    Z: int
    E: double

    """
    return _xraylib.CS_Rayl(Z, E)

def CS_Compt(Z, E):
    """
    CS_Compt(int Z, double E) -> double

    Parameters
    ----------
    Z: int
    E: double

    """
    return _xraylib.CS_Compt(Z, E)

def CS_KN(E):
    """
    CS_KN(double E) -> double

    Parameters
    ----------
    E: double

    """
    return _xraylib.CS_KN(E)

def CS_Energy(Z, E):
    """
    CS_Energy(int Z, double E) -> double

    Parameters
    ----------
    Z: int
    E: double

    """
    return _xraylib.CS_Energy(Z, E)

def CSb_Total(Z, E):
    """
    CSb_Total(int Z, double E) -> double

    Parameters
    ----------
    Z: int
    E: double

    """
    return _xraylib.CSb_Total(Z, E)

def CSb_Photo(Z, E):
    """
    CSb_Photo(int Z, double E) -> double

    Parameters
    ----------
    Z: int
    E: double

    """
    return _xraylib.CSb_Photo(Z, E)

def CSb_Rayl(Z, E):
    """
    CSb_Rayl(int Z, double E) -> double

    Parameters
    ----------
    Z: int
    E: double

    """
    return _xraylib.CSb_Rayl(Z, E)

def CSb_Compt(Z, E):
    """
    CSb_Compt(int Z, double E) -> double

    Parameters
    ----------
    Z: int
    E: double

    """
    return _xraylib.CSb_Compt(Z, E)

def DCS_Thoms(theta):
    """
    DCS_Thoms(double theta) -> double

    Parameters
    ----------
    theta: double

    """
    return _xraylib.DCS_Thoms(theta)

def DCS_KN(E, theta):
    """
    DCS_KN(double E, double theta) -> double

    Parameters
    ----------
    E: double
    theta: double

    """
    return _xraylib.DCS_KN(E, theta)

def DCS_Rayl(Z, E, theta):
    """
    DCS_Rayl(int Z, double E, double theta) -> double

    Parameters
    ----------
    Z: int
    E: double
    theta: double

    """
    return _xraylib.DCS_Rayl(Z, E, theta)

def DCS_Compt(Z, E, theta):
    """
    DCS_Compt(int Z, double E, double theta) -> double

    Parameters
    ----------
    Z: int
    E: double
    theta: double

    """
    return _xraylib.DCS_Compt(Z, E, theta)

def DCSb_Rayl(Z, E, theta):
    """
    DCSb_Rayl(int Z, double E, double theta) -> double

    Parameters
    ----------
    Z: int
    E: double
    theta: double

    """
    return _xraylib.DCSb_Rayl(Z, E, theta)

def DCSb_Compt(Z, E, theta):
    """
    DCSb_Compt(int Z, double E, double theta) -> double

    Parameters
    ----------
    Z: int
    E: double
    theta: double

    """
    return _xraylib.DCSb_Compt(Z, E, theta)

def DCSP_Thoms(theta, phi):
    """
    DCSP_Thoms(double theta, double phi) -> double

    Parameters
    ----------
    theta: double
    phi: double

    """
    return _xraylib.DCSP_Thoms(theta, phi)

def DCSP_KN(E, theta, phi):
    """
    DCSP_KN(double E, double theta, double phi) -> double

    Parameters
    ----------
    E: double
    theta: double
    phi: double

    """
    return _xraylib.DCSP_KN(E, theta, phi)

def DCSP_Rayl(Z, E, theta, phi):
    """
    DCSP_Rayl(int Z, double E, double theta, double phi) -> double

    Parameters
    ----------
    Z: int
    E: double
    theta: double
    phi: double

    """
    return _xraylib.DCSP_Rayl(Z, E, theta, phi)

def DCSP_Compt(Z, E, theta, phi):
    """
    DCSP_Compt(int Z, double E, double theta, double phi) -> double

    Parameters
    ----------
    Z: int
    E: double
    theta: double
    phi: double

    """
    return _xraylib.DCSP_Compt(Z, E, theta, phi)

def DCSPb_Rayl(Z, E, theta, phi):
    """
    DCSPb_Rayl(int Z, double E, double theta, double phi) -> double

    Parameters
    ----------
    Z: int
    E: double
    theta: double
    phi: double

    """
    return _xraylib.DCSPb_Rayl(Z, E, theta, phi)

def DCSPb_Compt(Z, E, theta, phi):
    """
    DCSPb_Compt(int Z, double E, double theta, double phi) -> double

    Parameters
    ----------
    Z: int
    E: double
    theta: double
    phi: double

    """
    return _xraylib.DCSPb_Compt(Z, E, theta, phi)

def FF_Rayl(Z, q):
    """
    FF_Rayl(int Z, double q) -> double

    Parameters
    ----------
    Z: int
    q: double

    """
    return _xraylib.FF_Rayl(Z, q)

def SF_Compt(Z, q):
    """
    SF_Compt(int Z, double q) -> double

    Parameters
    ----------
    Z: int
    q: double

    """
    return _xraylib.SF_Compt(Z, q)

def MomentTransf(E, theta):
    """
    MomentTransf(double E, double theta) -> double

    Parameters
    ----------
    E: double
    theta: double

    """
    return _xraylib.MomentTransf(E, theta)

def LineEnergy(Z, line):
    """
    LineEnergy(int Z, int line) -> double

    Parameters
    ----------
    Z: int
    line: int

    """
    return _xraylib.LineEnergy(Z, line)

def FluorYield(Z, shell):
    """
    FluorYield(int Z, int shell) -> double

    Parameters
    ----------
    Z: int
    shell: int

    """
    return _xraylib.FluorYield(Z, shell)

def CosKronTransProb(Z, trans):
    """
    CosKronTransProb(int Z, int trans) -> double

    Parameters
    ----------
    Z: int
    trans: int

    """
    return _xraylib.CosKronTransProb(Z, trans)

def EdgeEnergy(Z, shell):
    """
    EdgeEnergy(int Z, int shell) -> double

    Parameters
    ----------
    Z: int
    shell: int

    """
    return _xraylib.EdgeEnergy(Z, shell)

def JumpFactor(Z, shell):
    """
    JumpFactor(int Z, int shell) -> double

    Parameters
    ----------
    Z: int
    shell: int

    """
    return _xraylib.JumpFactor(Z, shell)

def CS_FluorLine(Z, line, E):
    """
    CS_FluorLine(int Z, int line, double E) -> double

    Parameters
    ----------
    Z: int
    line: int
    E: double

    """
    return _xraylib.CS_FluorLine(Z, line, E)

def CSb_FluorLine(Z, line, E):
    """
    CSb_FluorLine(int Z, int line, double E) -> double

    Parameters
    ----------
    Z: int
    line: int
    E: double

    """
    return _xraylib.CSb_FluorLine(Z, line, E)

def RadRate(Z, line):
    """
    RadRate(int Z, int line) -> double

    Parameters
    ----------
    Z: int
    line: int

    """
    return _xraylib.RadRate(Z, line)

def ComptonEnergy(E0, theta):
    """
    ComptonEnergy(double E0, double theta) -> double

    Parameters
    ----------
    E0: double
    theta: double

    """
    return _xraylib.ComptonEnergy(E0, theta)

def Fi(Z, E):
    """
    Fi(int Z, double E) -> double

    Parameters
    ----------
    Z: int
    E: double

    """
    return _xraylib.Fi(Z, E)

def Fii(Z, E):
    """
    Fii(int Z, double E) -> double

    Parameters
    ----------
    Z: int
    E: double

    """
    return _xraylib.Fii(Z, E)

def CS_Photo_Total(Z, E):
    """
    CS_Photo_Total(int Z, double E) -> double

    Parameters
    ----------
    Z: int
    E: double

    """
    return _xraylib.CS_Photo_Total(Z, E)

def CSb_Photo_Total(Z, E):
    """
    CSb_Photo_Total(int Z, double E) -> double

    Parameters
    ----------
    Z: int
    E: double

    """
    return _xraylib.CSb_Photo_Total(Z, E)

def CS_Photo_Partial(Z, shell, E):
    """
    CS_Photo_Partial(int Z, int shell, double E) -> double

    Parameters
    ----------
    Z: int
    shell: int
    E: double

    """
    return _xraylib.CS_Photo_Partial(Z, shell, E)

def CSb_Photo_Partial(Z, shell, E):
    """
    CSb_Photo_Partial(int Z, int shell, double E) -> double

    Parameters
    ----------
    Z: int
    shell: int
    E: double

    """
    return _xraylib.CSb_Photo_Partial(Z, shell, E)

def CS_FluorLine_Kissel(Z, line, E):
    """
    CS_FluorLine_Kissel(int Z, int line, double E) -> double

    Parameters
    ----------
    Z: int
    line: int
    E: double

    """
    return _xraylib.CS_FluorLine_Kissel(Z, line, E)

def CSb_FluorLine_Kissel(Z, line, E):
    """
    CSb_FluorLine_Kissel(int Z, int line, double E) -> double

    Parameters
    ----------
    Z: int
    line: int
    E: double

    """
    return _xraylib.CSb_FluorLine_Kissel(Z, line, E)

def CS_FluorLine_Kissel_Cascade(Z, line, E):
    """
    CS_FluorLine_Kissel_Cascade(int Z, int line, double E) -> double

    Parameters
    ----------
    Z: int
    line: int
    E: double

    """
    return _xraylib.CS_FluorLine_Kissel_Cascade(Z, line, E)

def CSb_FluorLine_Kissel_Cascade(Z, line, E):
    """
    CSb_FluorLine_Kissel_Cascade(int Z, int line, double E) -> double

    Parameters
    ----------
    Z: int
    line: int
    E: double

    """
    return _xraylib.CSb_FluorLine_Kissel_Cascade(Z, line, E)

def CS_FluorLine_Kissel_Nonradiative_Cascade(Z, line, E):
    """
    CS_FluorLine_Kissel_Nonradiative_Cascade(int Z, int line, double E) -> double

    Parameters
    ----------
    Z: int
    line: int
    E: double

    """
    return _xraylib.CS_FluorLine_Kissel_Nonradiative_Cascade(Z, line, E)

def CSb_FluorLine_Kissel_Nonradiative_Cascade(Z, line, E):
    """
    CSb_FluorLine_Kissel_Nonradiative_Cascade(int Z, int line, double E) -> double

    Parameters
    ----------
    Z: int
    line: int
    E: double

    """
    return _xraylib.CSb_FluorLine_Kissel_Nonradiative_Cascade(Z, line, E)

def CS_FluorLine_Kissel_Radiative_Cascade(Z, line, E):
    """
    CS_FluorLine_Kissel_Radiative_Cascade(int Z, int line, double E) -> double

    Parameters
    ----------
    Z: int
    line: int
    E: double

    """
    return _xraylib.CS_FluorLine_Kissel_Radiative_Cascade(Z, line, E)

def CSb_FluorLine_Kissel_Radiative_Cascade(Z, line, E):
    """
    CSb_FluorLine_Kissel_Radiative_Cascade(int Z, int line, double E) -> double

    Parameters
    ----------
    Z: int
    line: int
    E: double

    """
    return _xraylib.CSb_FluorLine_Kissel_Radiative_Cascade(Z, line, E)

def CS_FluorLine_Kissel_no_Cascade(Z, line, E):
    """
    CS_FluorLine_Kissel_no_Cascade(int Z, int line, double E) -> double

    Parameters
    ----------
    Z: int
    line: int
    E: double

    """
    return _xraylib.CS_FluorLine_Kissel_no_Cascade(Z, line, E)

def CSb_FluorLine_Kissel_no_Cascade(Z, line, E):
    """
    CSb_FluorLine_Kissel_no_Cascade(int Z, int line, double E) -> double

    Parameters
    ----------
    Z: int
    line: int
    E: double

    """
    return _xraylib.CSb_FluorLine_Kissel_no_Cascade(Z, line, E)

def CS_Total_Kissel(Z, E):
    """
    CS_Total_Kissel(int Z, double E) -> double

    Parameters
    ----------
    Z: int
    E: double

    """
    return _xraylib.CS_Total_Kissel(Z, E)

def CSb_Total_Kissel(Z, E):
    """
    CSb_Total_Kissel(int Z, double E) -> double

    Parameters
    ----------
    Z: int
    E: double

    """
    return _xraylib.CSb_Total_Kissel(Z, E)

def ElectronConfig(Z, shell):
    """
    ElectronConfig(int Z, int shell) -> double

    Parameters
    ----------
    Z: int
    shell: int

    """
    return _xraylib.ElectronConfig(Z, shell)

def CS_Total_CP(compound, E):
    """
    CS_Total_CP(char const [] compound, double E) -> double

    Parameters
    ----------
    compound: char const []
    E: double

    """
    return _xraylib.CS_Total_CP(compound, E)

def CS_Photo_CP(compound, E):
    """
    CS_Photo_CP(char const [] compound, double E) -> double

    Parameters
    ----------
    compound: char const []
    E: double

    """
    return _xraylib.CS_Photo_CP(compound, E)

def CS_Rayl_CP(compound, E):
    """
    CS_Rayl_CP(char const [] compound, double E) -> double

    Parameters
    ----------
    compound: char const []
    E: double

    """
    return _xraylib.CS_Rayl_CP(compound, E)

def CS_Compt_CP(compound, E):
    """
    CS_Compt_CP(char const [] compound, double E) -> double

    Parameters
    ----------
    compound: char const []
    E: double

    """
    return _xraylib.CS_Compt_CP(compound, E)

def CSb_Total_CP(compound, E):
    """
    CSb_Total_CP(char const [] compound, double E) -> double

    Parameters
    ----------
    compound: char const []
    E: double

    """
    return _xraylib.CSb_Total_CP(compound, E)

def CSb_Photo_CP(compound, E):
    """
    CSb_Photo_CP(char const [] compound, double E) -> double

    Parameters
    ----------
    compound: char const []
    E: double

    """
    return _xraylib.CSb_Photo_CP(compound, E)

def CSb_Rayl_CP(compound, E):
    """
    CSb_Rayl_CP(char const [] compound, double E) -> double

    Parameters
    ----------
    compound: char const []
    E: double

    """
    return _xraylib.CSb_Rayl_CP(compound, E)

def CSb_Compt_CP(compound, E):
    """
    CSb_Compt_CP(char const [] compound, double E) -> double

    Parameters
    ----------
    compound: char const []
    E: double

    """
    return _xraylib.CSb_Compt_CP(compound, E)

def DCS_Rayl_CP(compound, E, theta):
    """
    DCS_Rayl_CP(char const [] compound, double E, double theta) -> double

    Parameters
    ----------
    compound: char const []
    E: double
    theta: double

    """
    return _xraylib.DCS_Rayl_CP(compound, E, theta)

def DCS_Compt_CP(compound, E, theta):
    """
    DCS_Compt_CP(char const [] compound, double E, double theta) -> double

    Parameters
    ----------
    compound: char const []
    E: double
    theta: double

    """
    return _xraylib.DCS_Compt_CP(compound, E, theta)

def DCSb_Rayl_CP(compound, E, theta):
    """
    DCSb_Rayl_CP(char const [] compound, double E, double theta) -> double

    Parameters
    ----------
    compound: char const []
    E: double
    theta: double

    """
    return _xraylib.DCSb_Rayl_CP(compound, E, theta)

def DCSb_Compt_CP(compound, E, theta):
    """
    DCSb_Compt_CP(char const [] compound, double E, double theta) -> double

    Parameters
    ----------
    compound: char const []
    E: double
    theta: double

    """
    return _xraylib.DCSb_Compt_CP(compound, E, theta)

def DCSP_Rayl_CP(compound, E, theta, phi):
    """
    DCSP_Rayl_CP(char const [] compound, double E, double theta, double phi) -> double

    Parameters
    ----------
    compound: char const []
    E: double
    theta: double
    phi: double

    """
    return _xraylib.DCSP_Rayl_CP(compound, E, theta, phi)

def DCSP_Compt_CP(compound, E, theta, phi):
    """
    DCSP_Compt_CP(char const [] compound, double E, double theta, double phi) -> double

    Parameters
    ----------
    compound: char const []
    E: double
    theta: double
    phi: double

    """
    return _xraylib.DCSP_Compt_CP(compound, E, theta, phi)

def DCSPb_Rayl_CP(compound, E, theta, phi):
    """
    DCSPb_Rayl_CP(char const [] compound, double E, double theta, double phi) -> double

    Parameters
    ----------
    compound: char const []
    E: double
    theta: double
    phi: double

    """
    return _xraylib.DCSPb_Rayl_CP(compound, E, theta, phi)

def DCSPb_Compt_CP(compound, E, theta, phi):
    """
    DCSPb_Compt_CP(char const [] compound, double E, double theta, double phi) -> double

    Parameters
    ----------
    compound: char const []
    E: double
    theta: double
    phi: double

    """
    return _xraylib.DCSPb_Compt_CP(compound, E, theta, phi)

def CS_Photo_Total_CP(compound, E):
    """
    CS_Photo_Total_CP(char const [] compound, double E) -> double

    Parameters
    ----------
    compound: char const []
    E: double

    """
    return _xraylib.CS_Photo_Total_CP(compound, E)

def CSb_Photo_Total_CP(compound, E):
    """
    CSb_Photo_Total_CP(char const [] compound, double E) -> double

    Parameters
    ----------
    compound: char const []
    E: double

    """
    return _xraylib.CSb_Photo_Total_CP(compound, E)

def CS_Total_Kissel_CP(compound, E):
    """
    CS_Total_Kissel_CP(char const [] compound, double E) -> double

    Parameters
    ----------
    compound: char const []
    E: double

    """
    return _xraylib.CS_Total_Kissel_CP(compound, E)

def CSb_Total_Kissel_CP(compound, E):
    """
    CSb_Total_Kissel_CP(char const [] compound, double E) -> double

    Parameters
    ----------
    compound: char const []
    E: double

    """
    return _xraylib.CSb_Total_Kissel_CP(compound, E)

def CS_Energy_CP(compound, E):
    """
    CS_Energy_CP(char const [] compound, double E) -> double

    Parameters
    ----------
    compound: char const []
    E: double

    """
    return _xraylib.CS_Energy_CP(compound, E)

def Refractive_Index_Re(compound, E, density):
    """
    Refractive_Index_Re(char const [] compound, double E, double density) -> double

    Parameters
    ----------
    compound: char const []
    E: double
    density: double

    """
    return _xraylib.Refractive_Index_Re(compound, E, density)

def Refractive_Index_Im(compound, E, density):
    """
    Refractive_Index_Im(char const [] compound, double E, double density) -> double

    Parameters
    ----------
    compound: char const []
    E: double
    density: double

    """
    return _xraylib.Refractive_Index_Im(compound, E, density)

def Refractive_Index(compound, E, density):
    """
    Refractive_Index(char const [] compound, double E, double density) -> xrlComplex

    Parameters
    ----------
    compound: char const []
    E: double
    density: double

    """
    return _xraylib.Refractive_Index(compound, E, density)

def ComptonProfile(Z, pz):
    """
    ComptonProfile(int Z, double pz) -> double

    Parameters
    ----------
    Z: int
    pz: double

    """
    return _xraylib.ComptonProfile(Z, pz)

def ComptonProfile_Partial(Z, shell, pz):
    """
    ComptonProfile_Partial(int Z, int shell, double pz) -> double

    Parameters
    ----------
    Z: int
    shell: int
    pz: double

    """
    return _xraylib.ComptonProfile_Partial(Z, shell, pz)

def AtomicLevelWidth(Z, shell):
    """
    AtomicLevelWidth(int Z, int shell) -> double

    Parameters
    ----------
    Z: int
    shell: int

    """
    return _xraylib.AtomicLevelWidth(Z, shell)

def AugerRate(Z, auger_trans):
    """
    AugerRate(int Z, int auger_trans) -> double

    Parameters
    ----------
    Z: int
    auger_trans: int

    """
    return _xraylib.AugerRate(Z, auger_trans)

def AugerYield(Z, shell):
    """
    AugerYield(int Z, int shell) -> double

    Parameters
    ----------
    Z: int
    shell: int

    """
    return _xraylib.AugerYield(Z, shell)
# This file is compatible with both classic and new-style classes.


